/// <reference types="react" />
import { GuardLocalConfig } from '../../Guard/config';
import { GuardHttp } from '../guardHttp';
import { GuardPageConfig } from '../../Type';
import { ApplicationConfig, LoginMethods, RegisterMethods } from '../../Type/application';
export declare const getPublicConfig: (appId: string) => ApplicationConfig;
export declare const setPublicConfig: (appId: string, config: ApplicationConfig) => ApplicationConfig;
export declare const getPageConfig: (appId: string) => GuardPageConfig;
export declare const setPageConfig: (appId: string, config: GuardPageConfig) => GuardPageConfig;
export declare const useMergeDefaultConfig: (defaultConfig: GuardLocalConfig, config?: Partial<GuardLocalConfig> | undefined) => GuardLocalConfig | undefined;
/**
 * 请求服务console关于guard的配置
 * @param forceUpdate
 * @param appId
 * @param config
 * @param httpClient
 * @param setError
 */
export declare const useFetchConsoleConfig: (forceUpdate: number, appId?: string | undefined, config?: GuardLocalConfig | undefined, httpClient?: GuardHttp | undefined, setError?: any) => {
    finallyConfig: {
        host: string;
        isSSO?: boolean | undefined;
        defaultScenes?: import("../..").GuardModuleType | undefined;
        defaultInitData?: any;
        showLoading?: boolean | undefined;
        loadingComponent?: import("react").ReactNode;
        openEventsMapping?: boolean | undefined;
        disableRegister?: boolean | undefined;
        registerMethods?: RegisterMethods[] | undefined;
        defaultRegisterMethod?: RegisterMethods | undefined;
        publicKey?: string | undefined;
        agreementEnabled?: boolean | undefined;
        agreements?: import("../../Type").Agreement[] | undefined;
        registerContext?: any;
        title?: string | undefined;
        logo?: string | undefined;
        lang?: string | undefined;
        langRange?: import("../../Type").Lang[] | undefined;
        isHost?: boolean | undefined;
        mode: import("../../Type").GuardMode;
        clickCloseable: boolean;
        escCloseable: boolean;
        userpool?: string | undefined;
        contentCss?: string | undefined;
        target?: string | HTMLElement | undefined;
        __internalRequest__?: boolean | undefined;
        __singleComponent__?: boolean | undefined;
        __unAuthFlow__?: boolean | undefined;
        autoRegister?: boolean | undefined;
        disableResetPwd?: boolean | undefined;
        defaultLoginMethod?: LoginMethods | undefined;
        loginMethods?: LoginMethods[] | undefined;
        passwordLoginMethods?: import("../../Type").PasswordLoginMethods[] | undefined;
        socialConnections?: import("../../Type").SocialConnectionProvider[] | undefined;
        socialConnectionsBtnShape?: "default" | "button" | "icon" | undefined;
        enterpriseConnections?: string[] | undefined;
        qrCodeScanOptions?: {
            extIdpConnId?: string | undefined;
            autoExchangeUserInfo?: boolean | undefined;
            size?: {
                height: number;
                width: number;
            } | undefined;
            containerSize?: {
                height: number;
                width: number;
            } | undefined;
            interval?: number | undefined;
            onStart?: ((timer: any) => any) | undefined;
            onResult?: ((data: import("authing-js-sdk/build/main/lib/authentication/types").QRCodeStatus) => any) | undefined;
            onScanned?: ((userInfo: import("authing-js-sdk/build/main/lib/authentication/types").QRCodeUserInfo) => any) | undefined;
            onSuccess?: ((userInfo: import("authing-js-sdk/build/main/lib/authentication/types").QRCodeUserInfo, ticket: string) => any) | undefined;
            onCancel?: (() => any) | undefined;
            onError?: ((message: string) => any) | undefined;
            onExpired?: (() => any) | undefined;
            onCodeShow?: ((random: string, url: string) => any) | undefined;
            onCodeLoaded?: ((random: string, url: string) => any) | undefined;
            onCodeLoadFailed?: ((message: string) => any) | undefined;
            onCodeDestroyed?: ((random: string) => any) | undefined;
            onRetry?: (() => any) | undefined;
            onMfa?: ((code: number, message: string, data: Record<string, any>) => {}) | undefined;
            tips?: {
                title?: string | undefined;
                scanned?: string | undefined;
                succeed?: string | undefined;
                canceled?: string | undefined;
                expired?: string | undefined;
                retry?: string | undefined;
                failed?: string | undefined;
                middleTitle?: string | undefined;
                referText?: string | undefined;
            } | undefined;
            onAuthFlow?: ((flow: Record<string, any>) => {}) | undefined;
            customData?: {
                [x: string]: any;
            } | undefined;
            context?: {
                [x: string]: any;
            } | undefined;
            withCustomData?: boolean | undefined;
        } | undefined;
        _closeLoopCheckQrcode?: boolean | undefined;
    };
    guardPageConfig: GuardPageConfig;
} | {
    finallyConfig: undefined;
    guardPageConfig: undefined;
};
