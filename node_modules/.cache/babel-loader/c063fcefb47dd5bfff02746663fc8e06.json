{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { allow, authorizeResource, listAuthorizedResources, authorizedTargets } from '../graphqlapi';\nimport { formatAuthorizedResources, serialize } from '../utils';\n/**\n * @class AclManagementClient 管理权限、访问控制\n * @description Authing 基于 PBAC（Policy Based Access Control，基于策略的访问控制）构建权限模型，\n * 可以和 RBAC （Role Based Access Control，基于角色的访问控制）结合，实现非常灵活、精细化的权限控制。\n * 此模块将此模型抽象成了两个方法: allow, isAllowed。\n *\n * @example\n *\n * 请使用以下方式使用该模块，而不要直接初始化该模块：\n *\n * \\`\\`\\`javascript\n * import { ManagementClient } from \"authing-js-sdk\"\n * const managementClient = new ManagementClient({\n *    userPoolId: \"YOUR_USERPOOL_ID\",\n *    secret: \"YOUR_USERPOOL_SECRET\",\n * })\n * managementClient.acl.allow // 允许某个用户对某个资源进行某个操作\n * managementClient.acl.isAllowed // 判断某个用户是否对某个资源有某个操作权限\n * \\`\\`\\`\n *\n * @name AclManagementClient\n */\n\nvar AclManagementClient = function () {\n  function AclManagementClient(options, graphqlClient, httpClient, tokenProvider) {\n    this.options = options;\n    this.graphqlClient = graphqlClient;\n    this.httpClient = httpClient;\n    this.tokenProvider = tokenProvider;\n  }\n  /**\n   * 生成随机字符串\n   * @param randomLenth 随机长度\n   * @returns string\n   */\n\n\n  AclManagementClient.randomString = function (randomLenth) {\n    if (randomLenth === void 0) {\n      randomLenth = 32;\n    }\n\n    randomLenth = randomLenth || 32;\n    var t = 'abcdefhijkmnprstwxyz2345678';\n    var a = t.length;\n    var n = '';\n\n    for (var i = 0; i < randomLenth; i++) {\n      n += t.charAt(Math.floor(Math.random() * a));\n    }\n\n    return n;\n  };\n  /**\n   * @name allow\n   * @name_zh 允许某个用户对某个资源进行某个操作\n   *\n   * @description 允许某个用户对某个资源进行某个操作\n   *\n   * @param {string} userId 用户 ID\n   * @param {string} action 操作名称，推荐使用 \\<resourceType\\>:\\<actionName\\> 的格式，如 `books:edit`, `books:list`\n   * @param {string} resource 资源名称, 必须为 \\<resourceType\\>:\\<resourceId\\> 格式或者为 *, 如 `*`, `books:123`, `books:*`\n   * @example\n   * managementClient.acl.allow('USERID1', 'books:123', 'books:read')\n   * managementClient.acl.isAllowed('USERID1', 'books:123', 'books:read') // true\n   * managementClient.acl.isAllowed('USERID1', 'books:123', 'books:edit') // false\n   *\n   * @example\n   * managementClient.acl.allow('USERID2', 'books:*', 'books:*')\n   * managementClient.acl.isAllowed('USERID2', 'books:123', 'books:read') // true\n   * managementClient.acl.isAllowed('USERID2', 'books:124', 'books:edit') // true\n   *\n   * @returns {Promise<CommonMessage>}\n   * @memberof AclManagementClient\n   */\n\n\n  AclManagementClient.prototype.allow = function (userId, resource, action, namespace) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , allow(this.graphqlClient, this.tokenProvider, {\n              resource: resource,\n              action: action,\n              userId: userId,\n              namespace: namespace\n            })];\n\n          case 1:\n            data = _a.sent().allow;\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * @name isAllowed\n   * @name_zh 判断某个用户是否对某个资源有某个操作权限\n   *\n   * @description 判断某个用户是否对某个资源有某个操作权限\n   *\n   * @param {string} userId 用户ID\n   * @param {string} action 操作名称，推荐使用 \\<resourceType\\>:\\<actionName\\> 的格式，如 `books:edit`, `books:list`\n   * @param {string} resource 资源名称, 必须为 \\<resourceType\\>:\\<resourceId\\> 格式或者为 *, 如 `*`, `books:123`, `books:*`\n   * @example\n   * managementClient.acl.isAllowed('USERID', 'books:*', 'books:edit')\n   *\n   * @returns {Promise<boolean>} 是否具备操作权限\n   * @memberof AclManagementClient\n   *\n   */\n\n\n  AclManagementClient.prototype.isAllowed = function (userId, resource, action, opts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, namespace, tenantId, allowed;\n\n      var _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = opts || {}, namespace = _a.namespace, tenantId = _a.tenantId;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/acl/is-allowed\",\n              data: {\n                namespace: namespace,\n                userId: userId,\n                resource: resource,\n                action: action,\n                tenantId: tenantId\n              },\n              headers: (_b = {}, _b[this.options.headers['tenant-id']] = tenantId, _b)\n            })];\n\n          case 1:\n            allowed = _c.sent().allowed;\n            return [2\n            /*return*/\n            , allowed];\n        }\n      });\n    });\n  };\n  /**\n   * @description 获取用户被授权的所有资源\n   *\n   * @param userId\n   * @param namespace\n   */\n\n\n  AclManagementClient.prototype.listAuthorizedResources = function (targetType, targetIdentifier, namespace, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resourceType, _a, list, totalCount;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            resourceType = (options || {}).resourceType;\n            return [4\n            /*yield*/\n            , listAuthorizedResources(this.graphqlClient, this.tokenProvider, {\n              targetType: targetType,\n              targetIdentifier: targetIdentifier,\n              namespace: namespace,\n              resourceType: resourceType\n            })];\n\n          case 1:\n            _a = _b.sent().authorizedResources, list = _a.list, totalCount = _a.totalCount;\n            list = formatAuthorizedResources(list);\n            return [2\n            /*return*/\n            , {\n              list: list,\n              totalCount: totalCount\n            }];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.listAuthorizedResourcesBatch = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, tenantId, targets, resourceType, data;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            namespace = params.namespace, tenantId = params.tenantId, targets = params.targets, resourceType = params.resourceType;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/acl/list-authorized-resources-batch\",\n              data: {\n                namespace: namespace,\n                resourceType: resourceType,\n                targets: targets\n              },\n              headers: (_a = {}, _a[this.options.headers['tenant-id']] = tenantId, _a)\n            })];\n\n          case 1:\n            data = _b.sent();\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * @description 将一个（类）资源授权给用户、角色、分组、组织机构，且可以分别指定不同的操作权限。\n   *\n   */\n\n\n  AclManagementClient.prototype.authorizeResource = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, resource, opts, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            namespace = params.namespace, resource = params.resource, opts = params.opts;\n            return [4\n            /*yield*/\n            , authorizeResource(this.graphqlClient, this.tokenProvider, {\n              namespace: namespace,\n              resource: resource,\n              opts: opts\n            })];\n\n          case 1:\n            data = _a.sent().authorizeResource;\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * @description 批量授权资源\n   *\n   */\n\n\n  AclManagementClient.prototype.authorizeResources = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, tenantId, opts;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            namespace = params.namespace, tenantId = params.tenantId, opts = params.opts;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/acl/authorize-resources\",\n              data: {\n                namespace: namespace,\n                opts: opts\n              },\n              headers: (_a = {}, _a[this.options.headers['tenant-id']] = tenantId, _a)\n            })];\n\n          case 1:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\n   * @description 批量撤销资源\n   */\n\n\n  AclManagementClient.prototype.revokeResources = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, tenantId, opts;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            namespace = params.namespace, tenantId = params.tenantId, opts = params.opts;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/acl/revoke-resources\",\n              data: {\n                namespace: namespace,\n                opts: opts\n              },\n              headers: (_a = {}, _a[this.options.headers['tenant-id']] = tenantId, _a)\n            })];\n\n          case 1:\n            _b.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.revokeResource = function (params) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, resource, opts;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            namespace = params.namespace, resource = params.resource, opts = params.opts;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/acl/revoke-resource\",\n              data: {\n                namespace: namespace,\n                resource: resource,\n                opts: opts\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n  /**\n   * @description 获取具备某个（类）资源操作权限的用户、分组、角色、组织机构。\n   * @param namespace {string} 权限分组标识\n   * @param resource {string} 资源标识\n   * @param actions {string[]} 资源操作标识\n   * @param targetType {string} 筛选项，指定返回主体的类型，可选值为 'USER'、'ROLE'、'ORG'、'GROUP'\n   */\n\n\n  AclManagementClient.prototype.getAuthorizedTargets = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!options) {\n              throw new Error('请传入 options.namespace、options.resource、options.actions，含义为权限分组标识、资源标识、资源操作标识');\n            }\n\n            if (!options.namespace) {\n              throw new Error('请传入 options.namespace，含义为权限分组标识');\n            }\n\n            if (!options.resource) {\n              throw new Error('请传入 options.resource，含义为资源标识');\n            }\n\n            if (!options.resourceType) {\n              throw new Error('请传入 options.resourceType，含义为资源类型');\n            }\n\n            return [4\n            /*yield*/\n            , authorizedTargets(this.graphqlClient, this.tokenProvider, {\n              namespace: options.namespace,\n              resourceType: options.resourceType,\n              resource: options.resource,\n              targetType: options.targetType,\n              actions: options.actions\n            })];\n\n          case 1:\n            data = _a.sent().authorizedTargets;\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.listResources = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/resources\",\n              params: {\n                namespace: (options === null || options === void 0 ? void 0 : options.namespace) || (options === null || options === void 0 ? void 0 : options.namespaceCode),\n                type: options === null || options === void 0 ? void 0 : options.type,\n                limit: (options === null || options === void 0 ? void 0 : options.limit) || 10,\n                page: (options === null || options === void 0 ? void 0 : options.page) || 1\n              }\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.getResourceById = function (id) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/resources/detail\",\n              params: {\n                id: id\n              }\n            })];\n\n          case 1:\n            data = _a.sent();\n\n            if (!data) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.getResourceByCode = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, code, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            namespace = options.namespace, code = options.code;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/resources/detail\",\n              params: {\n                namespace: namespace,\n                code: code\n              }\n            })];\n\n          case 1:\n            data = _a.sent();\n\n            if (!data) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * @deprecated use listResources\n   * @param options\n   */\n\n\n  AclManagementClient.prototype.getResources = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.listResources(options)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.createResource = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!options) {\n              throw new Error('请传入资源数据');\n            }\n\n            if (!options.code) {\n              throw new Error('请为资源设定一个资源标识符');\n            }\n\n            if (!options.actions || (options === null || options === void 0 ? void 0 : options.actions.length) === 0) {\n              throw new Error('请至少定义一个资源操作');\n            }\n\n            if (!options.namespace) {\n              throw new Error('请传入权限分组标识符');\n            }\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/resources\",\n              data: options\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.updateResource = function (code, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!code) {\n              throw new Error('请传入资源标识符');\n            }\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/resources/\" + code,\n              data: options\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.deleteResource = function (code, namespace) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!code) {\n              throw new Error('请传入资源标识符');\n            }\n\n            if (!namespace) {\n              throw new Error('请传入权限分组标识符');\n            }\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/resources/\" + code,\n              params: {\n                namespace: namespace\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.getApplicationAccessPolicies = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var appId, page, limit;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入 appId');\n            }\n\n            appId = options.appId, page = options.page, limit = options.limit;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/records\",\n              params: {\n                page: page,\n                limit: limit\n              }\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.enableApplicationAccessPolicy = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入 appId');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n              throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n              throw new Error('请传入主体 id');\n            }\n\n            namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/enable-effect\",\n              data: {\n                targetType: targetType,\n                namespace: namespace,\n                targetIdentifiers: targetIdentifiers,\n                inheritByChildren: inheritByChildren\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              code: 200,\n              message: '启用应用访问控制策略成功'\n            }];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.disableApplicationAccessPolicy = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入 appId');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n              throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n              throw new Error('请传入主体 id');\n            }\n\n            namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/disable-effect\",\n              data: {\n                targetType: targetType,\n                namespace: namespace,\n                targetIdentifiers: targetIdentifiers,\n                inheritByChildren: inheritByChildren\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              code: 200,\n              message: '停用应用访问控制策略成功'\n            }];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.deleteApplicationAccessPolicy = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入 appId');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n              throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n              throw new Error('请传入主体 id');\n            }\n\n            namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/revoke\",\n              data: {\n                targetType: targetType,\n                namespace: namespace,\n                targetIdentifiers: targetIdentifiers,\n                inheritByChildren: inheritByChildren\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              code: 200,\n              message: '删除应用访问控制策略成功'\n            }];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.allowAccessApplication = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入 appId');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n              throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n              throw new Error('请传入主体 id');\n            }\n\n            namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/allow\",\n              data: {\n                targetType: targetType,\n                namespace: namespace,\n                targetIdentifiers: targetIdentifiers,\n                inheritByChildren: inheritByChildren\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              code: 200,\n              message: '允许主体访问应用的策略配置已生效'\n            }];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.denyAccessApplication = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入 appId');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n              throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n              throw new Error('请传入主体 id');\n            }\n\n            namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/deny\",\n              data: {\n                targetType: targetType,\n                namespace: namespace,\n                targetIdentifiers: targetIdentifiers,\n                inheritByChildren: inheritByChildren\n              }\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              code: 200,\n              message: '拒绝主体访问应用的策略配置已生效'\n            }];\n        }\n      });\n    });\n  };\n\n  AclManagementClient.prototype.updateDefaultApplicationAccessPolicy = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n              throw new Error('请传入应用 id');\n            }\n\n            if (!(options === null || options === void 0 ? void 0 : options.defaultStrategy)) {\n              throw new Error('请传入默认策略，可选值为 ALLOW_ALL、DENY_ALL，含义为默认允许所有用户登录应用、默认拒绝所有用户登录应用');\n            }\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + options.appId,\n              data: {\n                permissionStrategy: {\n                  defaultStrategy: options.defaultStrategy\n                }\n              }\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * 编程访问账号列表\n   * @param appId 应用 ID\n   * @param page 当前页数\n   * @param limit 每页显示条数\n   * @returns Promise<ProgrammaticAccessAccountList>\n   */\n\n\n  AclManagementClient.prototype.programmaticAccessAccountList = function (appId, page, limit) {\n    if (page === void 0) {\n      page = 1;\n    }\n\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/programmatic-access-accounts?limit=\" + limit + \"&page=\" + page\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 添加编程访问账号\n   * @param appId 应用 ID\n   * @param options.tokenLifetime AccessToken 过期时间（秒）\n   * @param options.remarks 备注\n   * @returns Promise<ProgrammaticAccessAccount>\n   */\n\n\n  AclManagementClient.prototype.createProgrammaticAccessAccount = function (appId, options) {\n    if (options === void 0) {\n      options = {\n        tokenLifetime: 600\n      };\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/applications/\" + appId + \"/programmatic-access-accounts\",\n              data: __assign({}, options)\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 添加编程访问账号\n   * @param programmaticAccessAccountId 编程访问账号 ID\n   * @returns Promise<boolean>\n   */\n\n\n  AclManagementClient.prototype.deleteProgrammaticAccessAccount = function (programmaticAccessAccountId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/applications/programmatic-access-accounts?id=\" + programmaticAccessAccountId\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_1 = _a.sent();\n            throw error_1;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 刷新编程访问账号密钥\n   * @param programmaticAccessAccountId 编程访问账号 ID\n   * @param programmaticAccessAccountSecret 编程访问账号 Secret\n   * @returns Promise<ProgrammaticAccessAccount>\n   */\n\n\n  AclManagementClient.prototype.refreshProgrammaticAccessAccountSecret = function (programmaticAccessAccountId, programmaticAccessAccountSecret) {\n    if (programmaticAccessAccountSecret === void 0) {\n      programmaticAccessAccountSecret = AclManagementClient.randomString(32);\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PATCH',\n              url: this.options.host + \"/api/v2/applications/programmatic-access-accounts\",\n              data: {\n                id: programmaticAccessAccountId,\n                secret: programmaticAccessAccountSecret\n              }\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 启用编程访问账号\n   * @param programmaticAccessAccountId 编程访问账号 ID\n   * @returns Promise<ProgrammaticAccessAccount>\n   */\n\n\n  AclManagementClient.prototype.enableProgrammaticAccessAccount = function (programmaticAccessAccountId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PATCH',\n              url: this.options.host + \"/api/v2/applications/programmatic-access-accounts\",\n              data: {\n                id: programmaticAccessAccountId,\n                enabled: true\n              }\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 禁用编程访问账号\n   * @param programmaticAccessAccountId 编程访问账号 ID\n   * @returns Promise<ProgrammaticAccessAccount>\n   */\n\n\n  AclManagementClient.prototype.disableProgrammaticAccessAccount = function (programmaticAccessAccountId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PATCH',\n              url: this.options.host + \"/api/v2/applications/programmatic-access-accounts\",\n              data: {\n                id: programmaticAccessAccountId,\n                enabled: false\n              }\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 权限分组列表\n   * @param page 当前页数\n   * @param limit 每页显示条数\n   * @returns Promise<Resources>\n   */\n\n\n  AclManagementClient.prototype.listNamespaces = function (page, limit) {\n    if (page === void 0) {\n      page = 1;\n    }\n\n    if (limit === void 0) {\n      limit = 10;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId + \"?\" + serialize({\n                page: page === null || page === void 0 ? void 0 : page.toString(),\n                limit: limit === null || limit === void 0 ? void 0 : limit.toString()\n              })\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n  /**\n   * 删除权限分组\n   * @param code 权限分组 Code\n   * @returns Promise<boolean>\n   */\n\n\n  AclManagementClient.prototype.deleteNamespace = function (code) {\n    return __awaiter(this, void 0, void 0, function () {\n      var error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'DELETE',\n              url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId + \"/code/\" + code\n            })];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , true];\n\n          case 2:\n            error_2 = _a.sent();\n            throw error_2;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 创建权限分组\n   * @param code 权限分组 Code\n   * @param name 权限分组名称\n   * @param description 权限分组描述\n   * @returns Promise<boolean>\n   */\n\n\n  AclManagementClient.prototype.createNamespace = function (code, name, description) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId,\n              data: {\n                name: name,\n                code: code,\n                description: description\n              }\n            })];\n\n          case 1:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data];\n\n          case 2:\n            error_3 = _a.sent();\n            throw error_3;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * 修改权限分组\n   * @param code 权限分组 Code\n   * @param name 权限分组名称\n   * @param code 权限分组 Code\n   * @param description 权限分组描述\n   * @returns Promise<boolean>\n   */\n\n\n  AclManagementClient.prototype.updateNamespace = function (code, updates) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'PUT',\n              url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId + \"/code/\" + code,\n              data: {\n                name: updates.name,\n                code: updates.code,\n                description: updates.description\n              }\n            })];\n\n          case 1:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data];\n\n          case 2:\n            error_4 = _a.sent();\n            throw error_4;\n\n          case 3:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }; //授权详情 -获取下面的规则信息\n\n\n  AclManagementClient.prototype.getPoliciesAssignmentsCondition = function (namespace, policyCode, targetType) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'GET',\n              url: this.options.host + \"/api/v2/policies/assignments/by-target?namespace=\" + namespace + \"&policy_code=\" + policyCode + \"&target_type=\" + targetType\n            })];\n\n          case 1:\n            result = _a.sent();\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  return AclManagementClient;\n}();\n\nexport { AclManagementClient };","map":{"version":3,"sources":["../../../../src/lib/management/AclManagementClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { allow, authorizeResource, listAuthorizedResources, authorizedTargets } from '../graphqlapi';\nimport { formatAuthorizedResources, serialize } from '../utils';\n/**\n * @class AclManagementClient 管理权限、访问控制\n * @description Authing 基于 PBAC（Policy Based Access Control，基于策略的访问控制）构建权限模型，\n * 可以和 RBAC （Role Based Access Control，基于角色的访问控制）结合，实现非常灵活、精细化的权限控制。\n * 此模块将此模型抽象成了两个方法: allow, isAllowed。\n *\n * @example\n *\n * 请使用以下方式使用该模块，而不要直接初始化该模块：\n *\n * \\`\\`\\`javascript\n * import { ManagementClient } from \"authing-js-sdk\"\n * const managementClient = new ManagementClient({\n *    userPoolId: \"YOUR_USERPOOL_ID\",\n *    secret: \"YOUR_USERPOOL_SECRET\",\n * })\n * managementClient.acl.allow // 允许某个用户对某个资源进行某个操作\n * managementClient.acl.isAllowed // 判断某个用户是否对某个资源有某个操作权限\n * \\`\\`\\`\n *\n * @name AclManagementClient\n */\nvar AclManagementClient = /** @class */ (function () {\n    function AclManagementClient(options, graphqlClient, httpClient, tokenProvider) {\n        this.options = options;\n        this.graphqlClient = graphqlClient;\n        this.httpClient = httpClient;\n        this.tokenProvider = tokenProvider;\n    }\n    /**\n     * 生成随机字符串\n     * @param randomLenth 随机长度\n     * @returns string\n     */\n    AclManagementClient.randomString = function (randomLenth) {\n        if (randomLenth === void 0) { randomLenth = 32; }\n        randomLenth = randomLenth || 32;\n        var t = 'abcdefhijkmnprstwxyz2345678';\n        var a = t.length;\n        var n = '';\n        for (var i = 0; i < randomLenth; i++) {\n            n += t.charAt(Math.floor(Math.random() * a));\n        }\n        return n;\n    };\n    /**\n     * @name allow\n     * @name_zh 允许某个用户对某个资源进行某个操作\n     *\n     * @description 允许某个用户对某个资源进行某个操作\n     *\n     * @param {string} userId 用户 ID\n     * @param {string} action 操作名称，推荐使用 \\<resourceType\\>:\\<actionName\\> 的格式，如 `books:edit`, `books:list`\n     * @param {string} resource 资源名称, 必须为 \\<resourceType\\>:\\<resourceId\\> 格式或者为 *, 如 `*`, `books:123`, `books:*`\n     * @example\n     * managementClient.acl.allow('USERID1', 'books:123', 'books:read')\n     * managementClient.acl.isAllowed('USERID1', 'books:123', 'books:read') // true\n     * managementClient.acl.isAllowed('USERID1', 'books:123', 'books:edit') // false\n     *\n     * @example\n     * managementClient.acl.allow('USERID2', 'books:*', 'books:*')\n     * managementClient.acl.isAllowed('USERID2', 'books:123', 'books:read') // true\n     * managementClient.acl.isAllowed('USERID2', 'books:124', 'books:edit') // true\n     *\n     * @returns {Promise<CommonMessage>}\n     * @memberof AclManagementClient\n     */\n    AclManagementClient.prototype.allow = function (userId, resource, action, namespace) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, allow(this.graphqlClient, this.tokenProvider, {\n                            resource: resource,\n                            action: action,\n                            userId: userId,\n                            namespace: namespace\n                        })];\n                    case 1:\n                        data = (_a.sent()).allow;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * @name isAllowed\n     * @name_zh 判断某个用户是否对某个资源有某个操作权限\n     *\n     * @description 判断某个用户是否对某个资源有某个操作权限\n     *\n     * @param {string} userId 用户ID\n     * @param {string} action 操作名称，推荐使用 \\<resourceType\\>:\\<actionName\\> 的格式，如 `books:edit`, `books:list`\n     * @param {string} resource 资源名称, 必须为 \\<resourceType\\>:\\<resourceId\\> 格式或者为 *, 如 `*`, `books:123`, `books:*`\n     * @example\n     * managementClient.acl.isAllowed('USERID', 'books:*', 'books:edit')\n     *\n     * @returns {Promise<boolean>} 是否具备操作权限\n     * @memberof AclManagementClient\n     *\n     */\n    AclManagementClient.prototype.isAllowed = function (userId, resource, action, opts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, namespace, tenantId, allowed;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = opts || {}, namespace = _a.namespace, tenantId = _a.tenantId;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/acl/is-allowed\",\n                                data: {\n                                    namespace: namespace,\n                                    userId: userId,\n                                    resource: resource,\n                                    action: action,\n                                    tenantId: tenantId\n                                },\n                                headers: (_b = {},\n                                    _b[this.options.headers['tenant-id']] = tenantId,\n                                    _b)\n                            })];\n                    case 1:\n                        allowed = (_c.sent()).allowed;\n                        return [2 /*return*/, allowed];\n                }\n            });\n        });\n    };\n    /**\n     * @description 获取用户被授权的所有资源\n     *\n     * @param userId\n     * @param namespace\n     */\n    AclManagementClient.prototype.listAuthorizedResources = function (targetType, targetIdentifier, namespace, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resourceType, _a, list, totalCount;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        resourceType = (options || {}).resourceType;\n                        return [4 /*yield*/, listAuthorizedResources(this.graphqlClient, this.tokenProvider, {\n                                targetType: targetType,\n                                targetIdentifier: targetIdentifier,\n                                namespace: namespace,\n                                resourceType: resourceType\n                            })];\n                    case 1:\n                        _a = (_b.sent()).authorizedResources, list = _a.list, totalCount = _a.totalCount;\n                        list = formatAuthorizedResources(list);\n                        return [2 /*return*/, {\n                                list: list,\n                                totalCount: totalCount\n                            }];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.listAuthorizedResourcesBatch = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, tenantId, targets, resourceType, data;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        namespace = params.namespace, tenantId = params.tenantId, targets = params.targets, resourceType = params.resourceType;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/acl/list-authorized-resources-batch\",\n                                data: {\n                                    namespace: namespace,\n                                    resourceType: resourceType,\n                                    targets: targets\n                                },\n                                headers: (_a = {},\n                                    _a[this.options.headers['tenant-id']] = tenantId,\n                                    _a)\n                            })];\n                    case 1:\n                        data = _b.sent();\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * @description 将一个（类）资源授权给用户、角色、分组、组织机构，且可以分别指定不同的操作权限。\n     *\n     */\n    AclManagementClient.prototype.authorizeResource = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, resource, opts, data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        namespace = params.namespace, resource = params.resource, opts = params.opts;\n                        return [4 /*yield*/, authorizeResource(this.graphqlClient, this.tokenProvider, {\n                                namespace: namespace,\n                                resource: resource,\n                                opts: opts\n                            })];\n                    case 1:\n                        data = (_a.sent()).authorizeResource;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * @description 批量授权资源\n     *\n     */\n    AclManagementClient.prototype.authorizeResources = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, tenantId, opts;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        namespace = params.namespace, tenantId = params.tenantId, opts = params.opts;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/acl/authorize-resources\",\n                                data: {\n                                    namespace: namespace,\n                                    opts: opts\n                                },\n                                headers: (_a = {},\n                                    _a[this.options.headers['tenant-id']] = tenantId,\n                                    _a)\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    /**\n     * @description 批量撤销资源\n     */\n    AclManagementClient.prototype.revokeResources = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, tenantId, opts;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        namespace = params.namespace, tenantId = params.tenantId, opts = params.opts;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/acl/revoke-resources\",\n                                data: {\n                                    namespace: namespace,\n                                    opts: opts\n                                },\n                                headers: (_a = {},\n                                    _a[this.options.headers['tenant-id']] = tenantId,\n                                    _a)\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.revokeResource = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, resource, opts;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        namespace = params.namespace, resource = params.resource, opts = params.opts;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/acl/revoke-resource\",\n                                data: {\n                                    namespace: namespace,\n                                    resource: resource,\n                                    opts: opts\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    /**\n     * @description 获取具备某个（类）资源操作权限的用户、分组、角色、组织机构。\n     * @param namespace {string} 权限分组标识\n     * @param resource {string} 资源标识\n     * @param actions {string[]} 资源操作标识\n     * @param targetType {string} 筛选项，指定返回主体的类型，可选值为 'USER'、'ROLE'、'ORG'、'GROUP'\n     */\n    AclManagementClient.prototype.getAuthorizedTargets = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!options) {\n                            throw new Error('请传入 options.namespace、options.resource、options.actions，含义为权限分组标识、资源标识、资源操作标识');\n                        }\n                        if (!options.namespace) {\n                            throw new Error('请传入 options.namespace，含义为权限分组标识');\n                        }\n                        if (!options.resource) {\n                            throw new Error('请传入 options.resource，含义为资源标识');\n                        }\n                        if (!options.resourceType) {\n                            throw new Error('请传入 options.resourceType，含义为资源类型');\n                        }\n                        return [4 /*yield*/, authorizedTargets(this.graphqlClient, this.tokenProvider, {\n                                namespace: options.namespace,\n                                resourceType: options.resourceType,\n                                resource: options.resource,\n                                targetType: options.targetType,\n                                actions: options.actions\n                            })];\n                    case 1:\n                        data = (_a.sent()).authorizedTargets;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.listResources = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/resources\",\n                            params: {\n                                namespace: (options === null || options === void 0 ? void 0 : options.namespace) || (options === null || options === void 0 ? void 0 : options.namespaceCode),\n                                type: options === null || options === void 0 ? void 0 : options.type,\n                                limit: (options === null || options === void 0 ? void 0 : options.limit) || 10,\n                                page: (options === null || options === void 0 ? void 0 : options.page) || 1\n                            }\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.getResourceById = function (id) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/resources/detail\",\n                            params: {\n                                id: id\n                            }\n                        })];\n                    case 1:\n                        data = _a.sent();\n                        if (!data) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.getResourceByCode = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, code, data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        namespace = options.namespace, code = options.code;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'GET',\n                                url: this.options.host + \"/api/v2/resources/detail\",\n                                params: {\n                                    namespace: namespace,\n                                    code: code\n                                }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        if (!data) {\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * @deprecated use listResources\n     * @param options\n     */\n    AclManagementClient.prototype.getResources = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.listResources(options)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.createResource = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!options) {\n                            throw new Error('请传入资源数据');\n                        }\n                        if (!options.code) {\n                            throw new Error('请为资源设定一个资源标识符');\n                        }\n                        if (!options.actions || (options === null || options === void 0 ? void 0 : options.actions.length) === 0) {\n                            throw new Error('请至少定义一个资源操作');\n                        }\n                        if (!options.namespace) {\n                            throw new Error('请传入权限分组标识符');\n                        }\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/resources\",\n                                data: options\n                            })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.updateResource = function (code, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!code) {\n                            throw new Error('请传入资源标识符');\n                        }\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/resources/\" + code,\n                                data: options\n                            })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.deleteResource = function (code, namespace) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!code) {\n                            throw new Error('请传入资源标识符');\n                        }\n                        if (!namespace) {\n                            throw new Error('请传入权限分组标识符');\n                        }\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'DELETE',\n                                url: this.options.host + \"/api/v2/resources/\" + code,\n                                params: {\n                                    namespace: namespace\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.getApplicationAccessPolicies = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var appId, page, limit;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入 appId');\n                        }\n                        appId = options.appId, page = options.page, limit = options.limit;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'GET',\n                                url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/records\",\n                                params: {\n                                    page: page,\n                                    limit: limit\n                                }\n                            })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.enableApplicationAccessPolicy = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入 appId');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n                            throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n                            throw new Error('请传入主体 id');\n                        }\n                        namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/enable-effect\",\n                                data: {\n                                    targetType: targetType,\n                                    namespace: namespace,\n                                    targetIdentifiers: targetIdentifiers,\n                                    inheritByChildren: inheritByChildren\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, { code: 200, message: '启用应用访问控制策略成功' }];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.disableApplicationAccessPolicy = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入 appId');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n                            throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n                            throw new Error('请传入主体 id');\n                        }\n                        namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/disable-effect\",\n                                data: {\n                                    targetType: targetType,\n                                    namespace: namespace,\n                                    targetIdentifiers: targetIdentifiers,\n                                    inheritByChildren: inheritByChildren\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, { code: 200, message: '停用应用访问控制策略成功' }];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.deleteApplicationAccessPolicy = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入 appId');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n                            throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n                            throw new Error('请传入主体 id');\n                        }\n                        namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/revoke\",\n                                data: {\n                                    targetType: targetType,\n                                    namespace: namespace,\n                                    targetIdentifiers: targetIdentifiers,\n                                    inheritByChildren: inheritByChildren\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, { code: 200, message: '删除应用访问控制策略成功' }];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.allowAccessApplication = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入 appId');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n                            throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n                            throw new Error('请传入主体 id');\n                        }\n                        namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/allow\",\n                                data: {\n                                    targetType: targetType,\n                                    namespace: namespace,\n                                    targetIdentifiers: targetIdentifiers,\n                                    inheritByChildren: inheritByChildren\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, { code: 200, message: '允许主体访问应用的策略配置已生效' }];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.denyAccessApplication = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var namespace, targetIdentifiers, targetType, appId, inheritByChildren;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入 appId');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetType)) {\n                            throw new Error('请传入主体类型，可选值为 USER、ROLE、ORG、GROUP，含义为用户、角色、组织机构节点、用户分组');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.targetIdentifiers)) {\n                            throw new Error('请传入主体 id');\n                        }\n                        namespace = options.namespace, targetIdentifiers = options.targetIdentifiers, targetType = options.targetType, appId = options.appId, inheritByChildren = options.inheritByChildren;\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/applications/\" + appId + \"/authorization/deny\",\n                                data: {\n                                    targetType: targetType,\n                                    namespace: namespace,\n                                    targetIdentifiers: targetIdentifiers,\n                                    inheritByChildren: inheritByChildren\n                                }\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, { code: 200, message: '拒绝主体访问应用的策略配置已生效' }];\n                }\n            });\n        });\n    };\n    AclManagementClient.prototype.updateDefaultApplicationAccessPolicy = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(options === null || options === void 0 ? void 0 : options.appId)) {\n                            throw new Error('请传入应用 id');\n                        }\n                        if (!(options === null || options === void 0 ? void 0 : options.defaultStrategy)) {\n                            throw new Error('请传入默认策略，可选值为 ALLOW_ALL、DENY_ALL，含义为默认允许所有用户登录应用、默认拒绝所有用户登录应用');\n                        }\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/applications/\" + options.appId,\n                                data: {\n                                    permissionStrategy: { defaultStrategy: options.defaultStrategy }\n                                }\n                            })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * 编程访问账号列表\n     * @param appId 应用 ID\n     * @param page 当前页数\n     * @param limit 每页显示条数\n     * @returns Promise<ProgrammaticAccessAccountList>\n     */\n    AclManagementClient.prototype.programmaticAccessAccountList = function (appId, page, limit) {\n        if (page === void 0) { page = 1; }\n        if (limit === void 0) { limit = 10; }\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/applications/\" + appId + \"/programmatic-access-accounts?limit=\" + limit + \"&page=\" + page\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 添加编程访问账号\n     * @param appId 应用 ID\n     * @param options.tokenLifetime AccessToken 过期时间（秒）\n     * @param options.remarks 备注\n     * @returns Promise<ProgrammaticAccessAccount>\n     */\n    AclManagementClient.prototype.createProgrammaticAccessAccount = function (appId, options) {\n        if (options === void 0) { options = {\n            tokenLifetime: 600\n        }; }\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/applications/\" + appId + \"/programmatic-access-accounts\",\n                            data: __assign({}, options)\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 添加编程访问账号\n     * @param programmaticAccessAccountId 编程访问账号 ID\n     * @returns Promise<boolean>\n     */\n    AclManagementClient.prototype.deleteProgrammaticAccessAccount = function (programmaticAccessAccountId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'DELETE',\n                                url: this.options.host + \"/api/v2/applications/programmatic-access-accounts?id=\" + programmaticAccessAccountId\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_1 = _a.sent();\n                        throw error_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 刷新编程访问账号密钥\n     * @param programmaticAccessAccountId 编程访问账号 ID\n     * @param programmaticAccessAccountSecret 编程访问账号 Secret\n     * @returns Promise<ProgrammaticAccessAccount>\n     */\n    AclManagementClient.prototype.refreshProgrammaticAccessAccountSecret = function (programmaticAccessAccountId, programmaticAccessAccountSecret) {\n        if (programmaticAccessAccountSecret === void 0) { programmaticAccessAccountSecret = AclManagementClient.randomString(32); }\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'PATCH',\n                            url: this.options.host + \"/api/v2/applications/programmatic-access-accounts\",\n                            data: {\n                                id: programmaticAccessAccountId,\n                                secret: programmaticAccessAccountSecret\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 启用编程访问账号\n     * @param programmaticAccessAccountId 编程访问账号 ID\n     * @returns Promise<ProgrammaticAccessAccount>\n     */\n    AclManagementClient.prototype.enableProgrammaticAccessAccount = function (programmaticAccessAccountId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'PATCH',\n                            url: this.options.host + \"/api/v2/applications/programmatic-access-accounts\",\n                            data: {\n                                id: programmaticAccessAccountId,\n                                enabled: true\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 禁用编程访问账号\n     * @param programmaticAccessAccountId 编程访问账号 ID\n     * @returns Promise<ProgrammaticAccessAccount>\n     */\n    AclManagementClient.prototype.disableProgrammaticAccessAccount = function (programmaticAccessAccountId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'PATCH',\n                            url: this.options.host + \"/api/v2/applications/programmatic-access-accounts\",\n                            data: {\n                                id: programmaticAccessAccountId,\n                                enabled: false\n                            }\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 权限分组列表\n     * @param page 当前页数\n     * @param limit 每页显示条数\n     * @returns Promise<Resources>\n     */\n    AclManagementClient.prototype.listNamespaces = function (page, limit) {\n        if (page === void 0) { page = 1; }\n        if (limit === void 0) { limit = 10; }\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId + \"?\" +\n                                serialize({\n                                    page: page === null || page === void 0 ? void 0 : page.toString(),\n                                    limit: limit === null || limit === void 0 ? void 0 : limit.toString()\n                                })\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * 删除权限分组\n     * @param code 权限分组 Code\n     * @returns Promise<boolean>\n     */\n    AclManagementClient.prototype.deleteNamespace = function (code) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'DELETE',\n                                url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId + \"/code/\" + code\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, true];\n                    case 2:\n                        error_2 = _a.sent();\n                        throw error_2;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 创建权限分组\n     * @param code 权限分组 Code\n     * @param name 权限分组名称\n     * @param description 权限分组描述\n     * @returns Promise<boolean>\n     */\n    AclManagementClient.prototype.createNamespace = function (code, name, description) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'POST',\n                                url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId,\n                                data: {\n                                    name: name,\n                                    code: code,\n                                    description: description\n                                }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data];\n                    case 2:\n                        error_3 = _a.sent();\n                        throw error_3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 修改权限分组\n     * @param code 权限分组 Code\n     * @param name 权限分组名称\n     * @param code 权限分组 Code\n     * @param description 权限分组描述\n     * @returns Promise<boolean>\n     */\n    AclManagementClient.prototype.updateNamespace = function (code, updates) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, error_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, this.httpClient.request({\n                                method: 'PUT',\n                                url: this.options.host + \"/api/v2/resource-namespace/\" + this.options.userPoolId + \"/code/\" + code,\n                                data: {\n                                    name: updates.name,\n                                    code: updates.code,\n                                    description: updates.description\n                                }\n                            })];\n                    case 1:\n                        data = _a.sent();\n                        return [2 /*return*/, data];\n                    case 2:\n                        error_4 = _a.sent();\n                        throw error_4;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    //授权详情 -获取下面的规则信息\n    AclManagementClient.prototype.getPoliciesAssignmentsCondition = function (namespace, policyCode, targetType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'GET',\n                            url: this.options.host + \"/api/v2/policies/assignments/by-target?namespace=\" + namespace + \"&policy_code=\" + policyCode + \"&target_type=\" + targetType\n                        })];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    return AclManagementClient;\n}());\nexport { AclManagementClient };\n//# sourceMappingURL=AclManagementClient.js.map"]},"metadata":{},"sourceType":"module"}