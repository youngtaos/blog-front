{"ast":null,"code":"import e from \"axios\";\n\nvar t = function () {\n  return t = Object.assign || function (e) {\n    for (var t, o = 1, n = arguments.length; o < n; o++) for (var r in t = arguments[o]) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);\n\n    return e;\n  }, t.apply(this, arguments);\n};\n\nfunction o(e, t, o, n) {\n  return new (o || (o = Promise))(function (r, i) {\n    function s(e) {\n      try {\n        a(n.next(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function c(e) {\n      try {\n        a(n.throw(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function a(e) {\n      var t;\n      e.done ? r(e.value) : (t = e.value, t instanceof o ? t : new o(function (e) {\n        e(t);\n      })).then(s, c);\n    }\n\n    a((n = n.apply(e, t || [])).next());\n  });\n}\n\nfunction n(e, t) {\n  var o,\n      n,\n      r,\n      i,\n      s = {\n    label: 0,\n    sent: function () {\n      if (1 & r[0]) throw r[1];\n      return r[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return i = {\n    next: c(0),\n    throw: c(1),\n    return: c(2)\n  }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n    return this;\n  }), i;\n\n  function c(i) {\n    return function (c) {\n      return function (i) {\n        if (o) throw new TypeError(\"Generator is already executing.\");\n\n        for (; s;) try {\n          if (o = 1, n && (r = 2 & i[0] ? n.return : i[0] ? n.throw || ((r = n.return) && r.call(n), 0) : n.next) && !(r = r.call(n, i[1])).done) return r;\n\n          switch (n = 0, r && (i = [2 & i[0], r.value]), i[0]) {\n            case 0:\n            case 1:\n              r = i;\n              break;\n\n            case 4:\n              return s.label++, {\n                value: i[1],\n                done: !1\n              };\n\n            case 5:\n              s.label++, n = i[1], i = [0];\n              continue;\n\n            case 7:\n              i = s.ops.pop(), s.trys.pop();\n              continue;\n\n            default:\n              if (!(r = s.trys, (r = r.length > 0 && r[r.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                s = 0;\n                continue;\n              }\n\n              if (3 === i[0] && (!r || i[1] > r[0] && i[1] < r[3])) {\n                s.label = i[1];\n                break;\n              }\n\n              if (6 === i[0] && s.label < r[1]) {\n                s.label = r[1], r = i;\n                break;\n              }\n\n              if (r && s.label < r[2]) {\n                s.label = r[2], s.ops.push(i);\n                break;\n              }\n\n              r[2] && s.ops.pop(), s.trys.pop();\n              continue;\n          }\n\n          i = t.call(e, s);\n        } catch (e) {\n          i = [6, e], n = 0;\n        } finally {\n          o = r = 0;\n        }\n\n        if (5 & i[0]) throw i[1];\n        return {\n          value: i[0] ? i[1] : void 0,\n          done: !0\n        };\n      }([i, c]);\n    };\n  }\n}\n\nfunction r(e) {\n  var t, r;\n  return o(this, void 0, void 0, function () {\n    var o, i, s, c;\n    return n(this, function (n) {\n      switch (n.label) {\n        case 0:\n          return n.trys.push([0, 2,, 3]), [4, e];\n\n        case 1:\n          return [2, n.sent()];\n\n        case 2:\n          if (o = n.sent(), o.isAxiosError && (null === (r = null === (t = o.response) || void 0 === t ? void 0 : t.data) || void 0 === r ? void 0 : r.error)) throw i = o.response.data, s = i.error, c = i.error_description, new Error(\"认证服务器返回错误 \".concat(s, \": \").concat(c));\n          throw o;\n\n        case 3:\n          return [2];\n      }\n    });\n  });\n}\n\nfunction i(t, i) {\n  return o(this, void 0, void 0, function () {\n    return n(this, function (o) {\n      return [2, r(e.get(t, i))];\n    });\n  });\n}\n\nfunction s(t, i, s) {\n  return o(this, void 0, void 0, function () {\n    return n(this, function (o) {\n      return [2, r(e.post(t, i, s))];\n    });\n  });\n}\n\nvar c = \"\".concat(\"authing-spa\", \":\").concat(\"1\"),\n    a = function () {\n  function e() {\n    this.storage = Object.create(null);\n  }\n\n  return e.prototype.get = function (e) {\n    var t;\n    return null !== (t = this.storage[e]) && void 0 !== t ? t : null;\n  }, e.prototype.put = function (e, t) {\n    this.storage[e] = t;\n  }, e.prototype.delete = function (e) {\n    delete this.storage[e];\n  }, e;\n}(),\n    u = function () {\n  function e() {}\n\n  return e.prototype.get = function (e) {\n    var t = localStorage.getItem(e);\n    return null === t ? null : JSON.parse(t);\n  }, e.prototype.put = function (e, t) {\n    localStorage.setItem(e, JSON.stringify(t));\n  }, e.prototype.delete = function (e) {\n    localStorage.removeItem(e);\n  }, e;\n}(),\n    l = function () {\n  function e() {}\n\n  return e.prototype.get = function (e) {\n    return null;\n  }, e.prototype.put = function (e, t) {}, e.prototype.delete = function (e) {}, e;\n}(),\n    d = function () {\n  function e() {}\n\n  return e.prototype.get = function (e) {\n    var t = sessionStorage.getItem(e);\n    return null === t ? null : JSON.parse(t);\n  }, e.prototype.put = function (e, t) {\n    sessionStorage.setItem(e, JSON.stringify(t));\n  }, e.prototype.delete = function (e) {\n    sessionStorage.removeItem(e);\n  }, e;\n}();\n\nfunction p(e) {\n  return Object.keys(e).filter(function (t) {\n    return null !== e[t] && void 0 !== e[t];\n  }).map(function (t) {\n    return encodeURIComponent(t) + \"=\" + encodeURIComponent(e[t]);\n  }).join(\"&\");\n}\n\nfunction h(e) {\n  return [c, e, \"login-state\"].join(\":\");\n}\n\nfunction f(e, t) {\n  return [c, e, \"tx\", t].join(\":\");\n}\n\nfunction w() {\n  return window.crypto || window.msCrypto;\n}\n\nfunction g() {\n  var e = w();\n  return e.subtle || e.webkitSubtle;\n}\n\nfunction v(e) {\n  var t = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  return Array.from(w().getRandomValues(new Uint8Array(e))).map(function (e) {\n    return t[e % t.length];\n  }).join(\"\");\n}\n\nfunction m(e) {\n  for (var t = [], o = 0; o < e.length; ++o) t.push(e.charCodeAt(o));\n\n  return new Uint8Array(t);\n}\n\nfunction y(e) {\n  return void 0 === e && (e = \"SHA-256\"), o(this, void 0, void 0, function () {\n    var t, o;\n    return n(this, function (n) {\n      switch (n.label) {\n        case 0:\n          return t = v(43), [4, g().digest(e, m(t))];\n\n        case 1:\n          return o = n.sent(), [2, {\n            codeChallenge: function (e) {\n              for (var t = new Uint8Array(e), o = \"\", n = 0; n < t.byteLength; ++n) o += String.fromCharCode(t[n]);\n\n              var r = window.btoa(o),\n                  i = {\n                \"+\": \"-\",\n                \"/\": \"_\",\n                \"=\": \"\"\n              };\n              return r.replace(/[+/=]/g, function (e) {\n                return i[e];\n              });\n            }(o),\n            codeVerifier: t\n          }];\n      }\n    });\n  });\n}\n\nfunction b(e) {\n  var t = e.split(\".\"),\n      o = t[0],\n      n = t[1];\n  if (!t[2]) throw new Error(\"无效的 Token 格式\");\n  var r = JSON.parse(window.atob(o));\n  if (r.enc) throw new Error(\"本 SDK 目前不支持处理加密 Token, 请在应用配置中关闭「ID Token 加密」功能\");\n  return n = n.replace(/-/g, \"+\").replace(/_/g, \"/\"), n = decodeURIComponent(window.atob(n).split(\"\").map(function (e) {\n    return \"%\" + (\"00\" + e.charCodeAt(0).toString(16)).slice(-2);\n  }).join(\"\")), {\n    header: r,\n    body: JSON.parse(n)\n  };\n}\n\nvar k = function () {\n  function e(e) {\n    var t, o, n, r, i;\n    if (this.options = e, this.domain = function (e) {\n      var t,\n          o = /^((?:http)|(?:https):\\/\\/)?((?:[\\w-_]+)(?:\\.[\\w-_]+)+)(?:\\/.*)?$/.exec(e);\n      if (o && o[2]) return \"\".concat(null !== (t = o[1]) && void 0 !== t ? t : \"https://\").concat(o[2]);\n      throw Error(\"无效的域名配置: \".concat(e));\n    }(this.options.domain), !(e.useImplicitMode || w() && g())) throw new Error(\"PKCE 模式需要浏览器 crypto 能力, 请确保浏览器处于 https 域名下，或设置 useImplicitMode 为 true\");\n    \"object\" == typeof localStorage ? this.loginStateProvider = new u() : (console.warn(\"您的浏览器版本过低，登录态存储功能将不可用\"), this.loginStateProvider = new a()), \"object\" == typeof sessionStorage ? this.transactionProvider = new d() : (e.useImplicitMode || console.warn(\"您的浏览器版本过低，PKCE 重定向认证功能将不可用，请设置 useImplicitMode 为 true\"), this.transactionProvider = new l()), e.implicitResponseType = null !== (t = e.implicitResponseType) && void 0 !== t ? t : \"id_token token\", e.redirectResponseMode = null !== (o = e.redirectResponseMode) && void 0 !== o ? o : \"fragment\", e.popupWidth = null !== (n = e.popupWidth) && void 0 !== n ? n : 800, e.popupHeight = null !== (r = e.popupHeight) && void 0 !== r ? r : 600, e.scope = null !== (i = e.scope) && void 0 !== i ? i : \"openid profile\";\n  }\n\n  return e.prototype.getLoginState = function (e) {\n    var t;\n    return void 0 === e && (e = {}), o(this, void 0, void 0, function () {\n      var o, r, i, c, a, u, l, d, f, w, g;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return e.ignoreCache ? [3, 3] : [4, this.loginStateProvider.get(h(this.options.appId))];\n\n          case 1:\n            return (o = n.sent()) && o.expireAt && o.expireAt > Date.now() ? this.options.introspectAccessToken && o.accessToken ? [4, s(\"\".concat(this.domain, \"/oidc/token/introspection\"), p({\n              client_id: this.options.appId,\n              token: o.accessToken\n            }), {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            })] : [2, o] : [3, 3];\n\n          case 2:\n            if (!0 === n.sent().data.active) return [2, o];\n            n.label = 3;\n\n          case 3:\n            return [4, this.loginStateProvider.delete(h(this.options.appId))];\n\n          case 4:\n            if (n.sent(), void 0 !== this.globalMsgListener) throw new Error(\"另一个认证流程正在进行中，请不要同时发起多个认证\");\n            return this.globalMsgListener = null, window.crossOriginIsolated ? (console.warn(\"当前页面运行在隔离模式下，无法获取登录态\"), [2, null]) : (r = v(16), i = v(16), a = null !== (t = this.options.redirectUri) && void 0 !== t ? t : window.location.origin, u = {\n              redirect_uri: a,\n              response_mode: \"web_message\",\n              response_type: this.options.useImplicitMode ? this.options.implicitResponseType : \"code\",\n              client_id: this.options.appId,\n              state: r,\n              nonce: i,\n              prompt: \"none\",\n              scope: this.options.scope\n            }, this.options.useImplicitMode ? [3, 6] : [4, y()]);\n\n          case 5:\n            l = n.sent(), d = l.codeChallenge, f = l.codeVerifier, c = f, u.code_challenge = d, u.code_challenge_method = \"S256\", n.label = 6;\n\n          case 6:\n            return (w = document.createElement(\"iframe\")).hidden = !0, w.width = w.height = \"0\", w.src = \"\".concat(this.domain, \"/oidc/auth?\").concat(p(u)), window.navigator.userAgent.indexOf(\"MSIE\") >= 1 || window.navigator.userAgent.indexOf(\"Trident\") >= 1 && window.navigator.userAgent.indexOf(\"rv\") >= 1 || window.navigator.userAgent.indexOf(\"Edge\") >= 1 ? document.body.appendChild(w) : document.body.append(w), [4, Promise.race([this.listenToPostMessage(r), new Promise(function (e) {\n              return setTimeout(function () {\n                return e(null);\n              }, 5e3);\n            })])];\n\n          case 7:\n            if (g = n.sent(), this.globalMsgListener && window.removeEventListener(\"message\", this.globalMsgListener), this.globalMsgListener = void 0, w.remove(), null === g) return console.warn(\"登录态获取超时\"), [2, null];\n            if (g.error) return \"login_required\" !== g.error ? console.warn(\"登录态获取失败，认证服务器返回错误: error=\".concat(g.error, \", error_description=\").concat(g.errorDesc)) : console.info(\"用户未登录\"), [2, null];\n            if (g.state !== r) throw new Error(\"state 验证失败\");\n            return [2, this.handleOIDCWebMsgResponse(g, i, a, c)];\n        }\n      });\n    });\n  }, e.prototype.loginWithRedirect = function (e) {\n    var r;\n    return void 0 === e && (e = {}), o(this, void 0, void 0, function () {\n      var o, i, s, c, a, u, l, d;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            if (!(o = e.redirectUri || this.options.redirectUri)) throw new Error(\"必须设置 redirect_uri\");\n            return i = v(16), s = v(16), c = t(t({\n              redirect_uri: o,\n              response_mode: this.options.redirectResponseMode,\n              response_type: this.options.useImplicitMode ? this.options.implicitResponseType : \"code\",\n              client_id: this.options.appId\n            }, e.forced && {\n              prompt: \"login\"\n            }), {\n              state: i,\n              nonce: s,\n              scope: this.options.scope\n            }), this.options.useImplicitMode ? [3, 2] : [4, y()];\n\n          case 1:\n            u = n.sent(), l = u.codeChallenge, d = u.codeVerifier, c.code_challenge = l, c.code_challenge_method = \"S256\", a = d, n.label = 2;\n\n          case 2:\n            return [4, this.transactionProvider.put(f(this.options.appId, i), t(t({\n              codeVerifier: a,\n              state: i,\n              redirectUri: o,\n              nonce: s\n            }, this.options.redirectToOriginalUri && {\n              originalUri: null !== (r = e.originalUri) && void 0 !== r ? r : window.location.href\n            }), void 0 !== e.customState && {\n              customState: e.customState\n            }))];\n\n          case 3:\n            return n.sent(), window.location.replace(\"\".concat(this.domain, \"/oidc/auth?\").concat(p(c))), [2];\n        }\n      });\n    });\n  }, e.prototype.isRedirectCallback = function () {\n    var e = this.resolveCallbackParams();\n    return !!e && (!!e.error || (this.options.useImplicitMode ? !(!e.access_token && !e.id_token) : !!e.code));\n  }, e.prototype.handleRedirectCallback = function () {\n    return o(this, void 0, void 0, function () {\n      var e, o, r, i, s, c, a, u, l, d, p;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            if (!(e = this.resolveCallbackParams())) throw new Error(\"非法的回调 URL\");\n            if (e.error) throw new Error(\"认证失败, error=\".concat(e.error, \", error_description=\").concat(e.error_description));\n            if (!(i = e.state)) throw new Error(\"非法的回调 URL: 缺少 state\");\n            return [4, this.transactionProvider.get(f(this.options.appId, i))];\n\n          case 1:\n            return (s = n.sent()) ? [4, this.transactionProvider.delete(f(this.options.appId, i))] : [3, 5];\n\n          case 2:\n            if (n.sent(), s.state !== i) throw new Error(\"state 验证失败\");\n            if (o = s.originalUri, r = s.customState, this.options.useImplicitMode) return [3, 4];\n            if (!(c = e.code)) throw new Error(\"非法的回调 URL: 缺少 code\");\n            return [4, this.exchangeToken(c, s.redirectUri, s.codeVerifier, s.nonce)];\n\n          case 3:\n            return a = n.sent(), this.options.redirectToOriginalUri && o && window.location.replace(o), [2, a];\n\n          case 4:\n            return [3, 6];\n\n          case 5:\n            if (!this.options.useImplicitMode) throw new Error(\"获取登录流程会话失败, 请确认是否重复访问了回调端点，以及浏览器是否支持 sessionStorage\");\n            n.label = 6;\n\n          case 6:\n            if (u = e.id_token, l = e.access_token, d = null == s ? void 0 : s.nonce, this.options.implicitResponseType.includes(\"token\") && !l || this.options.implicitResponseType.includes(\"id_token\") && !u) throw new Error(\"非法的回调 URL: 缺少 token\");\n            return [4, this.saveLoginState({\n              idToken: u,\n              accessToken: l,\n              nonce: d\n            })];\n\n          case 7:\n            return p = n.sent(), this.options.redirectToOriginalUri && o && window.location.replace(o), [2, t(t({}, p), {\n              customState: r\n            })];\n        }\n      });\n    });\n  }, e.prototype.loginWithPopup = function (e) {\n    return void 0 === e && (e = {}), o(this, void 0, void 0, function () {\n      var o, r, i, s, c, a, u, l, d, h, f;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            if (o = e.redirectUri || this.options.redirectUri || window.location.origin, void 0 !== this.globalMsgListener) throw new Error(\"另一个认证流程正在进行中，请不要同时发起多个认证\");\n            if (this.globalMsgListener = null, window.crossOriginIsolated) throw new Error(\"当前页面运行在隔离模式下, 无法进行此方式登录, 请使用 loginWithRedirect\");\n            return r = v(16), i = v(16), s = t(t({\n              redirect_uri: o,\n              response_mode: \"web_message\",\n              response_type: this.options.useImplicitMode ? this.options.implicitResponseType : \"code\",\n              client_id: this.options.appId,\n              state: r,\n              nonce: i\n            }, e.forced && {\n              prompt: \"login\"\n            }), {\n              scope: this.options.scope\n            }), this.options.useImplicitMode ? [3, 2] : [4, y()];\n\n          case 1:\n            a = n.sent(), u = a.codeChallenge, l = a.codeVerifier, c = l, s.code_challenge = u, s.code_challenge_method = \"S256\", n.label = 2;\n\n          case 2:\n            if (d = \"\".concat(this.domain, \"/oidc/auth?\").concat(p(s)), !(h = window.open(d, \"authing-spa-login-window\", \"popup,width=\".concat(this.options.popupWidth, \",height=\").concat(this.options.popupHeight)))) throw new Error(\"弹出窗口失败\");\n            return [4, Promise.race([this.listenToPostMessage(r), new Promise(function (e) {\n              var t = setInterval(function () {\n                h.closed && (clearInterval(t), setTimeout(function () {\n                  return e(null);\n                }, 500));\n              }, 500);\n            })])];\n\n          case 3:\n            if (f = n.sent(), this.globalMsgListener && window.removeEventListener(\"message\", this.globalMsgListener), this.globalMsgListener = void 0, !f) return [2, null];\n            if (f.error) throw new Error(\"登录失败，认证服务器返回错误: error=\".concat(f.error, \", error_description=\").concat(f.errorDesc));\n            if (f.state !== r) throw new Error(\"state 验证失败\");\n            return [2, this.handleOIDCWebMsgResponse(f, i, o, c)];\n        }\n      });\n    });\n  }, e.prototype.getUserInfo = function (e) {\n    var t, r;\n    return void 0 === e && (e = {}), o(this, void 0, void 0, function () {\n      var o, s;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return null === (t = e.accessToken) || void 0 === t ? [3, 1] : (s = t, [3, 3]);\n\n          case 1:\n            return [4, this.getLoginState()];\n\n          case 2:\n            s = null === (r = n.sent()) || void 0 === r ? void 0 : r.accessToken, n.label = 3;\n\n          case 3:\n            if (!(o = s)) throw new Error(\"未传入 access token\");\n            return [4, i(\"\".concat(this.domain, \"/oidc/me\"), {\n              headers: {\n                Authorization: \"Bearer \".concat(o)\n              }\n            })];\n\n          case 4:\n            return [2, n.sent().data];\n        }\n      });\n    });\n  }, e.prototype.logoutWithRedirect = function (e) {\n    var t;\n    return void 0 === e && (e = {}), o(this, void 0, void 0, function () {\n      var o, r, i;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return [4, this.loginStateProvider.get(h(this.options.appId))];\n\n          case 1:\n            return (o = n.sent()) ? [4, this.loginStateProvider.delete(h(this.options.appId))] : [2];\n\n          case 2:\n            return n.sent(), r = {\n              id_token_hint: o.idToken\n            }, (i = null !== (t = e.redirectUri) && void 0 !== t ? t : this.options.logoutRedirectUri) && (r.post_logout_redirect_uri = i, r.state = e.state), [4, this.loginStateProvider.delete(h(this.options.appId))];\n\n          case 3:\n            return n.sent(), window.location.replace(\"\".concat(this.domain, \"/oidc/session/end?\").concat(p(r))), [2];\n        }\n      });\n    });\n  }, e.prototype.listenToPostMessage = function (e) {\n    return o(this, void 0, void 0, function () {\n      var t = this;\n      return n(this, function (o) {\n        return [2, new Promise(function (o, n) {\n          var r = function (i) {\n            var s;\n\n            if (i.origin === t.domain && \"authorization_response\" === (null === (s = i.data) || void 0 === s ? void 0 : s.type)) {\n              window.removeEventListener(\"message\", r), t.globalMsgListener = void 0;\n              var c = i.data.response;\n              return c && c.state === e ? c.error ? o({\n                error: c.error,\n                errorDesc: c.error_description\n              }) : o({\n                accessToken: c.access_token,\n                idToken: c.id_token,\n                refreshToken: c.refresh_token,\n                code: c.code,\n                state: c.state\n              }) : n(new Error(\"非法的服务端返回值\"));\n            }\n          };\n\n          t.globalMsgListener = r, window.addEventListener(\"message\", r);\n        })];\n      });\n    });\n  }, e.prototype.saveLoginState = function (e) {\n    return o(this, void 0, void 0, function () {\n      var t, o, r, i, s;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            if (t = e.accessToken, o = e.idToken, r = {\n              accessToken: t,\n              idToken: o,\n              timestamp: Date.now()\n            }, o && (i = b(o).body, r.parsedIdToken = i, r.expireAt = 1e3 * i.exp, e.nonce && i.nonce !== e.nonce)) throw new Error(\"nonce 验证失败\");\n            return t && (s = b(t).body, r.parsedAccessToken = s, r.expireAt = 1e3 * s.exp), [4, this.loginStateProvider.put(h(this.options.appId), r)];\n\n          case 1:\n            return n.sent(), [2, r];\n        }\n      });\n    });\n  }, e.prototype.exchangeToken = function (e, t, r, i) {\n    return o(this, void 0, void 0, function () {\n      var o, c;\n      return n(this, function (n) {\n        switch (n.label) {\n          case 0:\n            return o = {\n              grant_type: \"authorization_code\",\n              code: e,\n              code_verifier: r,\n              client_id: this.options.appId,\n              redirect_uri: t\n            }, [4, s(\"\".concat(this.domain, \"/oidc/token\"), p(o), {\n              headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\"\n              }\n            })];\n\n          case 1:\n            return c = n.sent().data, [2, this.saveLoginState({\n              idToken: c.id_token,\n              accessToken: c.access_token,\n              nonce: i\n            })];\n        }\n      });\n    });\n  }, e.prototype.handleOIDCWebMsgResponse = function (e, t, r, i) {\n    return o(this, void 0, void 0, function () {\n      return n(this, function (o) {\n        if (this.options.useImplicitMode) {\n          if (this.options.implicitResponseType.includes(\"token\") && \"string\" != typeof e.accessToken || this.options.implicitResponseType.includes(\"id_token\") && \"string\" != typeof e.idToken) throw new Error(\"无效的 Token 返回值\");\n          return [2, this.saveLoginState({\n            accessToken: e.accessToken,\n            idToken: e.idToken,\n            nonce: t\n          })];\n        }\n\n        if (\"string\" != typeof e.code) throw new Error(\"无效的 Code 返回值\");\n        if (!r || !i) throw new Error();\n        return [2, this.exchangeToken(e.code, r, i, t)];\n      });\n    });\n  }, e.prototype.resolveCallbackParams = function () {\n    var e = \"fragment\" === this.options.redirectResponseMode ? window.location.hash : window.location.search;\n    if (!e) return null;\n    var t = Object.create(null);\n    return e.substring(1).split(\"&\").forEach(function (e) {\n      var o = e.split(\"=\"),\n          n = o[0],\n          r = o[1];\n      t[n] = r;\n    }), t;\n  }, e;\n}();\n\nexport { k as Authing };","map":{"version":3,"sources":["../src/axios.ts","../src/constants.ts","../src/storage/InMemoryStorgeProvider.ts","../src/storage/LocalStorageProvider.ts","../src/storage/NullStorageProvider.ts","../src/storage/SessionStorageProvider.ts","../src/utils.ts","../src/Authing.ts"],"names":["isAxiosError","axiosPromiseWrapper","p","e_1","_b","response","_c","error","error_description","data","Error","url","options","axios","get","axiosPost","post","STORAGE_KEY_PREFIX","InMemoryStorageProvider","this","Object","create","prototype","key","_a","storage","value","LocalStorageProvider","jsonItem","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","NullStorageProvider","_key","_value","SessionStorageProvider","sessionStorage","createQueryParams","params","keys","filter","k","undefined","map","encodeURIComponent","join","loginStateKey","appId","state","getCrypto","window","crypto","msCrypto","getCryptoSubtle","subtle","webkitSubtle","createRandomString","length","charset","Array","from","getRandomValues","Uint8Array","v","string2Buf","str","buffer","i","push","charCodeAt","ie11SafeInput","binary","byteLength","String","fromCharCode","base64","btoa","charMapping","replace","ch","genPKCEPair","algorithm","codeVerifier","hash","digest","sent","buf2Base64Url","codeChallenge","domain","matchRes","exec","concat","parseToken","token","header","body","split","headerObj","atob","enc","decodeURIComponent","c","toString","slice","navigator","userAgent","indexOf","domainC14n","useImplicitMode","loginStateProvider","console","warn","transactionProvider","implicitResponseType","redirectResponseMode","popupWidth","popupHeight","_d","scope","_e","Authing","ignoreCache","state_1","expireAt","Date","now","introspectAccessToken","accessToken","client_id","headers","active","delete","globalMsgListener","crossOriginIsolated","nonce","redirectUrl","redirectUri","location","origin","redirect_uri","response_mode","response_type","prompt","code_challenge","code_challenge_method","iframe","document","createElement","hidden","width","height","src","appendChild","append","res","race","listenToPostMessage","Promise","resolve","removeEventListener","remove","errorDesc","info","handleOIDCWebMsgResponse","forced","put","transactionKey","__assign","redirectToOriginalUri","originalUri","href","customState","resolveCallbackParams","paramDict","tx","code","exchangeToken","idToken","id_token","access_token","includes","result","saveLoginState","win","open","handle","setInterval","closed","clearInterval","setTimeout","getLoginState","axiosGet","Authorization","loginState","id_token_hint","logoutRedirectUri","post_logout_redirect_uri","reject","msgEventListener","msgEvent","_this","type","refreshToken","refresh_token","addEventListener","timestamp","parsedIdToken","exp","parsedAccessToken","tokenParam","grant_type","code_verifier","tokenRes","paramSource","search","substring","forEach","item","val"],"mappings":"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","sourcesContent":["import axios, { AxiosError, AxiosRequestConfig } from 'axios';\n\nfunction isAxiosError(e: any): e is AxiosError {\n  return e.isAxiosError;\n}\n\nasync function axiosPromiseWrapper(p: Promise<any>) {\n  try {\n    return await p;\n  } catch (e) {\n    if (isAxiosError(e)) {\n      if (e.response?.data?.error) {\n        const { error, error_description } = e.response.data;\n        throw new Error(`认证服务器返回错误 ${error}: ${error_description}`);\n      }\n    }\n    throw e;\n  }\n}\n\nexport async function axiosGet(\n  url: string,\n  options?: AxiosRequestConfig<string>,\n) {\n  return axiosPromiseWrapper(axios.get(url, options));\n}\n\nexport async function axiosPost(\n  url: string,\n  data?: any,\n  options?: AxiosRequestConfig<string>,\n) {\n  return axiosPromiseWrapper(axios.post(url, data, options));\n}\n","export const SDK_IDENTIFIER = 'authing-spa';\nexport const STORAGE_VERSION = '1';\n\nexport const STORAGE_KEY_PREFIX = `${SDK_IDENTIFIER}:${STORAGE_VERSION}`;\n\nexport const DEFAULT_IFRAME_LOGINSTATE_TIMEOUT = 5000;\n\nexport const DEFAULT_POPUP_WIDTH = 800;\nexport const DEFAULT_POPUP_HEIGHT = 600;\n\nexport const DEFAULT_SCOPE = 'openid profile';\n\nexport const MSG_PENDING_AUTHZ =\n  '另一个认证流程正在进行中，请不要同时发起多个认证';\nexport const MSG_CROSS_ORIGIN_ISOLATED =\n  '当前页面运行在隔离模式下, 无法进行此方式登录, 请使用 loginWithRedirect';\n","import { MayBePromise } from '../types';\nimport { StorageProvider } from './interface';\n\nexport class InMemoryStorageProvider<T> implements StorageProvider<T> {\n  private readonly storage = Object.create(null);\n\n  get(key: string): MayBePromise<T | null> {\n    return this.storage[key] ?? null;\n  }\n\n  put(key: string, value: T): MayBePromise<void> {\n    this.storage[key] = value;\n  }\n\n  delete(key: string): MayBePromise<void> {\n    delete this.storage[key];\n  }\n}\n","import { MayBePromise } from '../types';\nimport { StorageProvider } from './interface';\n\nexport class LocalStorageProvider<T> implements StorageProvider<T> {\n  get(key: string): MayBePromise<T | null> {\n    const jsonItem = localStorage.getItem(key);\n    if (jsonItem === null) {\n      return null;\n    }\n    return JSON.parse(jsonItem) as T;\n  }\n\n  put(key: string, value: T): MayBePromise<void> {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  delete(key: string): MayBePromise<void> {\n    localStorage.removeItem(key);\n  }\n}\n","import { MayBePromise } from '../types';\nimport { StorageProvider } from './interface';\n\nexport class NullStorageProvider<T> implements StorageProvider<T> {\n  get(_key: string): MayBePromise<T | null> {\n    return null;\n  }\n\n  put(_key: string, _value: T): MayBePromise<void> {\n    // null\n  }\n\n  delete(_key: string): MayBePromise<void> {\n    // null\n  }\n}\n","import { MayBePromise } from \"../types\";\nimport { StorageProvider } from \"./interface\";\n\nexport class SessionStorageProvider<T> implements StorageProvider<T> {\n  get(key: string): MayBePromise<T | null> {\n    const jsonItem = sessionStorage.getItem(key);\n    if (jsonItem === null) {\n      return null;\n    }\n    return JSON.parse(jsonItem) as T;\n  }\n\n  put(key: string, value: T): MayBePromise<void> {\n    sessionStorage.setItem(key, JSON.stringify(value));\n  }\n\n  delete(key: string): MayBePromise<void> {\n    sessionStorage.removeItem(key);\n  }\n}","import { STORAGE_KEY_PREFIX } from './constants';\nimport { StrDict } from './types';\n\nexport function createQueryParams(params: any) {\n  return Object.keys(params)\n    .filter((k) => params[k] !== null && params[k] !== undefined)\n    .map(\n      (k) =>\n        encodeURIComponent(k) + '=' + encodeURIComponent(params[k] as string),\n    )\n    .join('&');\n}\n\nexport function loginStateKey(appId: string) {\n  return [STORAGE_KEY_PREFIX, appId, 'login-state'].join(':');\n}\n\nexport function transactionKey(appId: string, state: string) {\n  return [STORAGE_KEY_PREFIX, appId, 'tx', state].join(':');\n}\n\nexport function getCrypto() {\n  //ie 11.x uses msCrypto\n  return (window.crypto || (window as any).msCrypto) as Crypto;\n}\n\nexport function getCryptoSubtle() {\n  const crypto = getCrypto();\n  //safari 10.x uses webkitSubtle\n  return crypto.subtle || (crypto as any).webkitSubtle;\n}\n\nexport function createRandomString(length: number) {\n  const charset =\n    '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n  const randomValues = Array.from(\n    getCrypto().getRandomValues(new Uint8Array(length)),\n  );\n  return randomValues.map((v) => charset[v % charset.length]).join('');\n}\n\nexport function string2Buf(str: string) {\n  const buffer: number[] = [];\n  for (let i = 0; i < str.length; ++i) {\n    buffer.push(str.charCodeAt(i));\n  }\n  return new Uint8Array(buffer);\n}\n\nfunction buf2Base64Url(buffer: ArrayBuffer) {\n  const ie11SafeInput = new Uint8Array(buffer);\n  let binary = '';\n  for (let i = 0; i < ie11SafeInput.byteLength; ++i) {\n    binary += String.fromCharCode(ie11SafeInput[i]);\n  }\n  const base64 = window.btoa(binary);\n  const charMapping: StrDict = { '+': '-', '/': '_', '=': '' };\n  return base64.replace(/[+/=]/g, (ch: string) => charMapping[ch]);\n}\n\nexport async function genPKCEPair(algorithm = 'SHA-256') {\n  // 规定最少 43 个字符\n  const codeVerifier = createRandomString(43);\n  const hash = await getCryptoSubtle().digest(\n    algorithm,\n    string2Buf(codeVerifier),\n  );\n  const codeChallenge = buf2Base64Url(hash);\n  return { codeChallenge, codeVerifier };\n}\n\nexport function domainC14n(domain: string) {\n  const domainExp =\n    /^((?:http)|(?:https):\\/\\/)?((?:[\\w-_]+)(?:\\.[\\w-_]+)+)(?:\\/.*)?$/;\n  const matchRes = domainExp.exec(domain);\n  if (matchRes && matchRes[2]) {\n    return `${matchRes[1] ?? 'https://'}${matchRes[2]}`;\n  }\n  throw Error(`无效的域名配置: ${domain}`);\n}\n\nexport function parseToken(token: string) {\n  let [header, body, sig] = token.split('.');\n  if (!sig) {\n    throw new Error('无效的 Token 格式');\n  }\n\n  const headerObj = JSON.parse(window.atob(header));\n  if (headerObj.enc) {\n    throw new Error(\n      '本 SDK 目前不支持处理加密 Token, 请在应用配置中关闭「ID Token 加密」功能',\n    );\n  }\n\n  body = body.replace(/-/g, '+').replace(/_/g, '/');\n  body = decodeURIComponent(window.atob(body).split('').map(function(c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n\n  return {\n    header: headerObj,\n    body: JSON.parse(body),\n  };\n}\n\nexport function isIE() {\n  if (\n    window.navigator.userAgent.indexOf('MSIE') >= 1 ||\n    (window.navigator.userAgent.indexOf('Trident') >= 1 &&\n      window.navigator.userAgent.indexOf('rv') >= 1) ||\n    window.navigator.userAgent.indexOf('Edge') >= 1\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import { axiosGet, axiosPost } from './axios';\nimport {\n  DEFAULT_IFRAME_LOGINSTATE_TIMEOUT,\n  DEFAULT_POPUP_HEIGHT,\n  DEFAULT_POPUP_WIDTH,\n  DEFAULT_SCOPE,\n  MSG_CROSS_ORIGIN_ISOLATED,\n  MSG_PENDING_AUTHZ,\n} from './constants';\nimport {\n  AuthingSPAInitOptions,\n  LoginState,\n  IDToken,\n  AccessToken,\n  LoginTransaction,\n  AuthzURLParams,\n  OIDCWebMessageResponse,\n  PKCETokenParams,\n  OIDCTokenResponse,\n  LoginStateWithCustomStateData,\n  LogoutURLParams,\n  UserInfo,\n} from './global';\nimport { InMemoryStorageProvider } from './storage/InMemoryStorgeProvider';\nimport { StorageProvider } from './storage/interface';\nimport { LocalStorageProvider } from './storage/LocalStorageProvider';\nimport { NullStorageProvider } from './storage/NullStorageProvider';\nimport { SessionStorageProvider } from './storage/SessionStorageProvider';\nimport { MsgListener, StrDict } from './types';\nimport {\n  createQueryParams,\n  createRandomString,\n  domainC14n,\n  genPKCEPair,\n  getCrypto,\n  getCryptoSubtle,\n  isIE,\n  loginStateKey,\n  parseToken,\n  transactionKey,\n} from './utils';\n\nexport class Authing {\n  private globalMsgListener: MsgListener | null | undefined;\n\n  private readonly options: Required<AuthingSPAInitOptions>;\n  private readonly loginStateProvider: StorageProvider<LoginState>;\n  private readonly transactionProvider: StorageProvider<LoginTransaction>;\n  private readonly domain: string;\n\n  constructor(options: AuthingSPAInitOptions) {\n    this.options = options as any;\n    this.domain = domainC14n(this.options.domain);\n\n    if (!options.useImplicitMode && (!getCrypto() || !getCryptoSubtle())) {\n      throw new Error(\n        'PKCE 模式需要浏览器 crypto 能力, 请确保浏览器处于 https 域名下，或设置 useImplicitMode 为 true',\n      );\n    }\n\n    if (typeof localStorage === 'object') {\n      this.loginStateProvider = new LocalStorageProvider();\n    } else {\n      console.warn('您的浏览器版本过低，登录态存储功能将不可用');\n      this.loginStateProvider = new InMemoryStorageProvider();\n    }\n\n    if (typeof sessionStorage === 'object') {\n      this.transactionProvider = new SessionStorageProvider();\n    } else {\n      if (!options.useImplicitMode) {\n        console.warn(\n          '您的浏览器版本过低，PKCE 重定向认证功能将不可用，请设置 useImplicitMode 为 true',\n        );\n      }\n      this.transactionProvider = new NullStorageProvider();\n    }\n\n    options.implicitResponseType =\n      options.implicitResponseType ?? 'id_token token';\n    options.redirectResponseMode = options.redirectResponseMode ?? 'fragment';\n    options.popupWidth = options.popupWidth ?? DEFAULT_POPUP_WIDTH;\n    options.popupHeight = options.popupHeight ?? DEFAULT_POPUP_HEIGHT;\n    options.scope = options.scope ?? DEFAULT_SCOPE;\n  }\n\n  /**\n   * 按顺序用以下方式获取用户登录态：\n   *\n   * 1. 本地缓存获取\n   * 2. 隐藏 iframe 获取\n   *\n   * @param options.ignoreCache 忽略本地缓存\n   */\n  async getLoginState(\n    options: {\n      ignoreCache?: boolean;\n    } = {},\n  ): Promise<null | LoginState> {\n    // 1. 从 loginStateProvider 中（默认为 localStorage）获取\n    if (!options.ignoreCache) {\n      const state = await this.loginStateProvider.get(\n        loginStateKey(this.options.appId),\n      );\n      if (state && state.expireAt && state.expireAt > Date.now()) {\n        if (!this.options.introspectAccessToken || !state.accessToken) {\n          return state;\n        }\n\n        const { data } = await axiosPost(\n          `${this.domain}/oidc/token/introspection`,\n          createQueryParams({\n            client_id: this.options.appId,\n            token: state.accessToken,\n          }),\n          {\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n            },\n          },\n        );\n\n        if (data.active === true) {\n          return state;\n        }\n      }\n    }\n\n    // 清掉旧的登录态\n    await this.loginStateProvider.delete(loginStateKey(this.options.appId));\n\n    // 2. 用隐藏 iframe 获取\n    if (this.globalMsgListener !== undefined) {\n      throw new Error(MSG_PENDING_AUTHZ);\n    }\n    this.globalMsgListener = null;\n\n    if (window.crossOriginIsolated) {\n      // 如果是 crossOriginIsolated 就发不了 postMessage 了\n      console.warn('当前页面运行在隔离模式下，无法获取登录态');\n      return null;\n    }\n\n    const state = createRandomString(16);\n    const nonce = createRandomString(16);\n    let codeVerifier: string | undefined;\n    const redirectUrl = this.options.redirectUri ?? window.location.origin;\n\n    const params: AuthzURLParams = {\n      redirect_uri: redirectUrl,\n      response_mode: 'web_message',\n      response_type: this.options.useImplicitMode\n        ? this.options.implicitResponseType\n        : 'code',\n      client_id: this.options.appId,\n      state,\n      nonce,\n      prompt: 'none',\n      scope: this.options.scope,\n    };\n\n    if (!this.options.useImplicitMode) {\n      const { codeChallenge, codeVerifier: v } = await genPKCEPair();\n      codeVerifier = v;\n      params.code_challenge = codeChallenge;\n      params.code_challenge_method = 'S256';\n    }\n\n    const iframe = document.createElement('iframe');\n    // iframe.title = 'postMessage() Initiator';\n    iframe.hidden = true;\n    iframe.width = iframe.height = '0';\n\n    iframe.src = `${this.domain}/oidc/auth?${createQueryParams(params)}`;\n    if (isIE()) {\n      document.body.appendChild(iframe);\n    } else {\n      document.body.append(iframe);\n    }\n\n    const res = await Promise.race([\n      this.listenToPostMessage(state),\n      new Promise<null>((resolve) =>\n        setTimeout(() => resolve(null), DEFAULT_IFRAME_LOGINSTATE_TIMEOUT),\n      ),\n    ]);\n\n    if (this.globalMsgListener) {\n      window.removeEventListener('message', this.globalMsgListener);\n    }\n    this.globalMsgListener = undefined;\n\n    iframe.remove();\n\n    if (res === null) {\n      console.warn(`登录态获取超时`);\n      return null;\n    }\n\n    if (res.error) {\n      if (res.error !== 'login_required') {\n        console.warn(\n          `登录态获取失败，认证服务器返回错误: error=${res.error}, error_description=${res.errorDesc}`,\n        );\n      } else {\n        console.info('用户未登录');\n      }\n      return null;\n    }\n\n    if (res.state !== state) {\n      throw new Error('state 验证失败');\n    }\n\n    return this.handleOIDCWebMsgResponse(res, nonce, redirectUrl, codeVerifier);\n  }\n\n  /**\n   * 将用户重定向到 Authing 认证端点进行登录，需要配合 handleRedirectCallback 使用\n   *\n   * @param options.redirectUri 回调地址，默认为初始化参数中的 redirectUri\n   * @param options.originalUri 发起登录的 URL，若设置了 redirectToOriginalUri 会在登录结束后重定向回到此页面，默认为当前 URL\n   * @param options.forced 即使在用户已登录时也提示用户再次登录\n   * @param options.customState 自定义的中间状态，会被传递到回调端点\n   */\n  async loginWithRedirect(\n    options: {\n      redirectUri?: string;\n      originalUri?: string;\n      forced?: boolean;\n      customState?: any;\n    } = {},\n  ): Promise<void> {\n    const redirectUri = options.redirectUri || this.options.redirectUri;\n    if (!redirectUri) {\n      throw new Error('必须设置 redirect_uri');\n    }\n\n    const state = createRandomString(16);\n    const nonce = createRandomString(16);\n\n    const params: AuthzURLParams = {\n      redirect_uri: redirectUri,\n      response_mode: this.options.redirectResponseMode,\n      response_type: this.options.useImplicitMode\n        ? this.options.implicitResponseType\n        : 'code',\n      client_id: this.options.appId,\n      ...(options.forced && { prompt: 'login' }),\n      state,\n      nonce,\n      scope: this.options.scope,\n    };\n\n    let codeVerifier: string | undefined;\n    if (!this.options.useImplicitMode) {\n      const { codeChallenge, codeVerifier: v } = await genPKCEPair();\n      params.code_challenge = codeChallenge;\n      params.code_challenge_method = 'S256';\n      codeVerifier = v;\n    }\n\n    await this.transactionProvider.put(\n      transactionKey(this.options.appId, state),\n      {\n        codeVerifier,\n        state,\n        redirectUri,\n        nonce,\n        ...(this.options.redirectToOriginalUri && {\n          originalUri: options.originalUri ?? window.location.href,\n        }),\n        ...(options.customState !== undefined && {\n          customState: options.customState,\n        }),\n      },\n    );\n\n    window.location.replace(\n      `${this.domain}/oidc/auth?${createQueryParams(params)}`,\n    );\n  }\n\n  /**\n   * 判断当前 URL 是否为 Authing 登录回调 URL\n   */\n  isRedirectCallback(): boolean {\n    const params = this.resolveCallbackParams();\n\n    if (!params) {\n      return false;\n    }\n\n    if (params['error']) {\n      return true;\n    }\n\n    if (this.options.useImplicitMode) {\n      return !!(params['access_token'] || params['id_token']);\n    } else {\n      return !!params['code'];\n    }\n  }\n\n  /**\n   * 在回调端点处理 Authing 发送的授权码或 token，获取用户登录态\n   */\n  async handleRedirectCallback(): Promise<LoginStateWithCustomStateData> {\n    const paramDict = this.resolveCallbackParams();\n    if (!paramDict) {\n      throw new Error('非法的回调 URL');\n    }\n\n    if (paramDict.error) {\n      throw new Error(\n        `认证失败, error=${paramDict.error}, error_description=${paramDict.error_description}`,\n      );\n    }\n\n    let originalUri: string | undefined;\n    let customState: any;\n\n    const { state } = paramDict;\n    if (!state) {\n      throw new Error('非法的回调 URL: 缺少 state');\n    }\n    const tx = await this.transactionProvider.get(\n      transactionKey(this.options.appId, state),\n    );\n    if (tx) {\n      await this.transactionProvider.delete(\n        transactionKey(this.options.appId, state),\n      );\n\n      if (tx.state !== state) {\n        throw new Error('state 验证失败');\n      }\n\n      originalUri = tx.originalUri;\n      customState = tx.customState;\n      if (!this.options.useImplicitMode) {\n        // PKCE code flow\n        const { code } = paramDict;\n        if (!code) {\n          throw new Error('非法的回调 URL: 缺少 code');\n        }\n        const res = await this.exchangeToken(\n          code,\n          tx.redirectUri,\n          tx.codeVerifier as string,\n          tx.nonce,\n        );\n\n        if (this.options.redirectToOriginalUri && originalUri) {\n          window.location.replace(originalUri);\n        }\n\n        return res;\n      }\n    } else if (!this.options.useImplicitMode) {\n      throw new Error(\n        '获取登录流程会话失败, 请确认是否重复访问了回调端点，以及浏览器是否支持 sessionStorage',\n      );\n    }\n\n    // implicit flow\n    const idToken = paramDict.id_token;\n    const accessToken = paramDict.access_token;\n    const nonce = tx?.nonce;\n\n    if (\n      (this.options.implicitResponseType.includes('token') && !accessToken) ||\n      (this.options.implicitResponseType.includes('id_token') && !idToken)\n    ) {\n      throw new Error('非法的回调 URL: 缺少 token');\n    }\n\n    const result = await this.saveLoginState({\n      idToken,\n      accessToken,\n      nonce,\n    });\n\n    if (this.options.redirectToOriginalUri && originalUri) {\n      window.location.replace(originalUri);\n    }\n\n    return { ...result, customState };\n  }\n\n  /**\n   * 弹出一个新的 Authing 登录页面窗口，在其中完成登录\n   *\n   * @param options.redirectUri 回调地址，需要和当前页面在 same origin 下；默认为初始化参数中的 redirectUri 或 window.location.origin\n   * @param options.forced 即使在用户已登录时也提示用户再次登录\n   */\n  async loginWithPopup(\n    options: { redirectUri?: string; forced?: boolean } = {},\n  ): Promise<LoginState | null> {\n    const redirectUri =\n      options.redirectUri || this.options.redirectUri || window.location.origin;\n\n    if (this.globalMsgListener !== undefined) {\n      throw new Error(MSG_PENDING_AUTHZ);\n    }\n    this.globalMsgListener = null;\n\n    if (window.crossOriginIsolated) {\n      // 如果是 crossOriginIsolated 就发不了 postMessage 了\n      throw new Error(MSG_CROSS_ORIGIN_ISOLATED);\n    }\n\n    const state = createRandomString(16);\n    const nonce = createRandomString(16);\n\n    const params: AuthzURLParams = {\n      redirect_uri: redirectUri,\n      response_mode: 'web_message',\n      response_type: this.options.useImplicitMode\n        ? this.options.implicitResponseType\n        : 'code',\n      client_id: this.options.appId,\n      state,\n      nonce,\n      ...(options.forced && { prompt: 'login' }),\n      scope: this.options.scope,\n    };\n\n    let codeVerifier: string | undefined;\n    if (!this.options.useImplicitMode) {\n      const { codeChallenge, codeVerifier: v } = await genPKCEPair();\n      codeVerifier = v;\n      params.code_challenge = codeChallenge;\n      params.code_challenge_method = 'S256';\n    }\n\n    const url = `${this.domain}/oidc/auth?${createQueryParams(params)}`;\n    const win = window.open(\n      url,\n      'authing-spa-login-window',\n      `popup,width=${this.options.popupWidth},height=${this.options.popupHeight}`,\n    );\n    if (!win) {\n      throw new Error('弹出窗口失败');\n    }\n\n    const res = await Promise.race([\n      this.listenToPostMessage(state),\n      new Promise<null>((resolve) => {\n        const handle = setInterval(() => {\n          if (win.closed) {\n            clearInterval(handle);\n            // 防止 post message 事件和 close 事件同时到达\n            setTimeout(() => resolve(null), 500);\n          }\n        }, 500);\n      }),\n    ]);\n    if (this.globalMsgListener) {\n      window.removeEventListener('message', this.globalMsgListener);\n    }\n    this.globalMsgListener = undefined;\n\n    if (!res) {\n      // 窗口被用户关闭了\n      return null;\n    }\n\n    if (res.error) {\n      throw new Error(\n        `登录失败，认证服务器返回错误: error=${res.error}, error_description=${res.errorDesc}`,\n      );\n    }\n\n    if (res.state !== state) {\n      throw new Error('state 验证失败');\n    }\n\n    return this.handleOIDCWebMsgResponse(res, nonce, redirectUri, codeVerifier);\n  }\n\n  // /**\n  //  * 由于 iframe 存在跨域 cookie 无法携带以及联邦认证支持问题，暂时不支持本方法\n  //  *\n  //  * 在指定的 iframe 中显示 Authing 登录页面，在其中完成登录\n  //  *\n  //  * 注意: 当需要手动关闭 iframe 时，必须同时调用 abortIframeLogin 方法\n  //  *\n  //  * @param options.forced 即使在用户已登录时也提示用户再次登录\n  //  */\n  /*\n  async loginWithIframe(\n    iframe: HTMLIFrameElement,\n    options: { forced?: boolean } = {},\n  ): Promise<LoginState> {\n    if (this.globalMsgListener !== undefined) {\n      throw new Error(MSG_PENDING_AUTHZ);\n    }\n    this.globalMsgListener = null;\n\n    if (window.crossOriginIsolated) {\n      // 如果是 crossOriginIsolated 就发不了 postMessage 了\n      throw new Error(MSG_CROSS_ORIGIN_ISOLATED);\n    }\n\n    const state = createRandomString(16);\n    const nonce = createRandomString(16);\n    let codeVerifier: string | undefined;\n\n    const params: AuthzURLParams = {\n      redirect_uri: window.location.href,\n      response_mode: 'web_message',\n      response_type: this.options.useImplicitMode\n        ? this.options.implicitResponseType\n        : 'code',\n      client_id: this.options.appId,\n      state,\n      nonce,\n      ...(options.forced && { prompt: 'login' }),\n      scope: this.options.scope,\n    };\n\n    if (!this.options.useImplicitMode) {\n      const { codeChallenge, codeVerifier: v } = await genPKCEPair();\n      codeVerifier = v;\n      params.code_challenge = codeChallenge;\n      params.code_challenge_method = 'S256';\n    }\n\n    iframe.src = `${this.domain}/oidc/auth?${createQueryParams(params)}`;\n\n    const res = await this.listenToPostMessage(state);\n    if (res.error) {\n      throw new Error(\n        `登录失败，认证服务器返回错误: error=${res.error}, error_description=${res.errorDesc}`,\n      );\n    }\n\n    if (res.state !== state) {\n      throw new Error('state 验证失败');\n    }\n\n    return this.handleSuccessfulOIDCResponse(\n      res,\n      window.location.href,\n      codeVerifier,\n    );\n  }\n  */\n\n  /**\n   * 手动中止 iframe 登录, 并移除 SDK 注册的事件监听器\n   */\n  /*\n  abortIframeLogin(): void {\n    if (this.globalMsgListener) {\n      window.removeEventListener('message', this.globalMsgListener);\n    }\n    this.globalMsgListener = undefined;\n  }\n  */\n\n  /**\n   * 用 Access Token 获取用户身份信息\n   *\n   * @param options.accessToken Access Token，默认从登录态中获取\n   */\n  async getUserInfo(\n    options: {\n      accessToken?: string;\n    } = {},\n  ): Promise<UserInfo> {\n    const accessToken =\n      options.accessToken ?? (await this.getLoginState())?.accessToken;\n    if (!accessToken) {\n      throw new Error('未传入 access token');\n    }\n\n    const { data } = await axiosGet(`${this.domain}/oidc/me`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    return data as UserInfo;\n  }\n\n  /**\n   * 重定向到 Authing 的登出端点，完成登出操作\n   *\n   * @param options.redirectUri 登出完成后的回调地址，默认为初始化参数中的 logoutRedirectUri\n   * @param options.state 自定义中间状态\n   */\n  async logoutWithRedirect(\n    options: {\n      redirectUri?: string | null;\n      state?: string;\n    } = {},\n  ): Promise<void> {\n    const loginState = await this.loginStateProvider.get(\n      loginStateKey(this.options.appId),\n    );\n    if (!loginState) {\n      return;\n    }\n    await this.loginStateProvider.delete(loginStateKey(this.options.appId));\n\n    const params: LogoutURLParams = {\n      id_token_hint: loginState.idToken,\n    };\n\n    const logoutRedirectUri =\n      options.redirectUri ?? this.options.logoutRedirectUri;\n    if (logoutRedirectUri) {\n      params.post_logout_redirect_uri = logoutRedirectUri;\n      params.state = options.state;\n    }\n\n    await this.loginStateProvider.delete(loginStateKey(this.options.appId));\n\n    window.location.replace(\n      `${this.domain}/oidc/session/end?${createQueryParams(params)}`,\n    );\n    return;\n  }\n\n  private async listenToPostMessage(state: string) {\n    return new Promise<OIDCWebMessageResponse>((resolve, reject) => {\n      const msgEventListener = (msgEvent: MessageEvent) => {\n        if (\n          msgEvent.origin !== this.domain ||\n          msgEvent.data?.type !== 'authorization_response'\n        ) {\n          return;\n        }\n\n        window.removeEventListener('message', msgEventListener);\n        this.globalMsgListener = undefined;\n\n        const { response } = msgEvent.data;\n        if (!response || response.state !== state) {\n          return reject(new Error('非法的服务端返回值'));\n        }\n\n        if (response.error) {\n          return resolve({\n            error: response.error,\n            errorDesc: response.error_description,\n          });\n        }\n\n        return resolve({\n          accessToken: response.access_token,\n          idToken: response.id_token,\n          refreshToken: response.refresh_token,\n          code: response.code,\n          state: response.state,\n        });\n      };\n\n      this.globalMsgListener = msgEventListener;\n      window.addEventListener('message', msgEventListener);\n    });\n  }\n\n  private async saveLoginState(params: {\n    accessToken?: string;\n    idToken?: string;\n    nonce?: string;\n  }) {\n    const { accessToken, idToken } = params;\n    const loginState: LoginState = {\n      accessToken: accessToken,\n      idToken: idToken,\n      timestamp: Date.now(),\n    };\n\n    if (idToken) {\n      const parsedIdToken: IDToken = parseToken(idToken).body;\n      loginState.parsedIdToken = parsedIdToken;\n      loginState.expireAt = parsedIdToken.exp * 1000;\n\n      if (params.nonce && parsedIdToken.nonce !== params.nonce) {\n        throw new Error('nonce 验证失败');\n      }\n    }\n\n    if (accessToken) {\n      const parsedAccessToken: AccessToken = parseToken(accessToken).body;\n      loginState.parsedAccessToken = parsedAccessToken;\n      loginState.expireAt = parsedAccessToken.exp * 1000;\n    }\n\n    await this.loginStateProvider.put(\n      loginStateKey(this.options.appId),\n      loginState,\n    );\n    return loginState;\n  }\n\n  private async exchangeToken(\n    code: string,\n    redirectUri: string,\n    codeVerifier: string,\n    nonce: string,\n  ) {\n    const tokenParam: PKCETokenParams = {\n      grant_type: 'authorization_code',\n      code,\n      code_verifier: codeVerifier as string,\n      client_id: this.options.appId,\n      redirect_uri: redirectUri,\n    };\n\n    const { data: tokenRes } = (await axiosPost(\n      `${this.domain}/oidc/token`,\n      createQueryParams(tokenParam),\n      {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n      },\n    )) as { data: OIDCTokenResponse };\n\n    return this.saveLoginState({\n      idToken: tokenRes.id_token,\n      accessToken: tokenRes.access_token,\n      nonce,\n    });\n  }\n\n  private async handleOIDCWebMsgResponse(\n    res: OIDCWebMessageResponse,\n    nonce: string,\n    // 只有 PKCE 会用下面两个参数\n    redirectUri?: string,\n    codeVerifier?: string,\n  ) {\n    if (this.options.useImplicitMode) {\n      // implicit flow\n      if (\n        (this.options.implicitResponseType.includes('token') &&\n          typeof res.accessToken !== 'string') ||\n        (this.options.implicitResponseType.includes('id_token') &&\n          typeof res.idToken !== 'string')\n      ) {\n        throw new Error('无效的 Token 返回值');\n      }\n\n      return this.saveLoginState({\n        accessToken: res.accessToken,\n        idToken: res.idToken,\n        nonce,\n      });\n    }\n\n    // PKCE code flow\n    if (typeof res.code !== 'string') {\n      throw new Error('无效的 Code 返回值');\n    }\n\n    if (!redirectUri || !codeVerifier) {\n      // should never happen\n      throw new Error();\n    }\n\n    return this.exchangeToken(res.code, redirectUri, codeVerifier, nonce);\n  }\n\n  private resolveCallbackParams() {\n    const paramSource: string =\n      this.options.redirectResponseMode === 'fragment'\n        ? window.location.hash\n        : window.location.search;\n    if (!paramSource) {\n      return null;\n    }\n\n    const paramDict: StrDict = Object.create(null);\n    paramSource\n      .substring(1)\n      .split('&')\n      .forEach((item) => {\n        const [key, val] = item.split('=');\n        paramDict[key] = val;\n      });\n\n    return paramDict;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}