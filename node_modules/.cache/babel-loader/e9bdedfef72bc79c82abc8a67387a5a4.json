{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\blog\\\\src\\\\admin\\\\container\\\\HomeManagement\\\\component\\\\Login\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Authing } from '@authing/browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const sdk = useMemo(() => {\n    return new Authing({\n      domain: 'https://yutousi.authing.cn',\n      appId: '63858a0caa6255ed2a69abe7',\n      redirectUri: 'http://localhost:3000/admin.html'\n    });\n  }, []);\n  const [loginState, setLoginState] = useState(); // 以跳转方式打开 Authing 托管的登录页\n\n  const login = () => {\n    window.onload('http://localhost:3000/admin.html');\n  }; // 获取用户的登录状态\n\n\n  const getLoginState = useCallback(async () => {\n    try {\n      const state = await sdk.getLoginState();\n      setLoginState(state);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [sdk]);\n  useEffect(() => {\n    // 判断当前 URL 是否为 Authing 登录回调 URL\n    if (sdk.isRedirectCallback()) {\n      /**\r\n       * 以跳转方式打开 Authing 托管的登录页，认证成功后需要配合 \r\n       * handleRedirectCallback 方法，在回调端点处理 Authing 发送的\r\n       * 授权码或 token，获取用户登录态\r\n       */\n      sdk.handleRedirectCallback().then(res => setLoginState(res));\n    } else {\n      getLoginState();\n    }\n  }, [getLoginState, sdk]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: login,\n        children: \"loginWithRedirect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: JSON.stringify(loginState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"XRixj2/0OFpmBsxYr5ienlo2Qwk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/桌面/blog/src/admin/container/HomeManagement/component/Login/index.jsx"],"names":["React","useCallback","useEffect","useMemo","useState","Authing","App","sdk","domain","appId","redirectUri","loginState","setLoginState","login","window","onload","getLoginState","state","error","console","log","isRedirectCallback","handleRedirectCallback","then","res","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,GAAG,GAAGJ,OAAO,CAAC,MAAM;AACtB,WAAO,IAAIE,OAAJ,CAAY;AACfG,MAAAA,MAAM,EAAE,4BADO;AAEfC,MAAAA,KAAK,EAAE,0BAFQ;AAGfC,MAAAA,WAAW,EAAE;AAHE,KAAZ,CAAP;AAKH,GANkB,EAMhB,EANgB,CAAnB;AAQA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C,CATW,CAWX;;AAEA,QAAMS,KAAK,GAAG,MAAM;AAChBC,IAAAA,MAAM,CAACC,MAAP,CAAc,kCAAd;AACH,GAFD,CAbW,CAiBX;;;AAEA,QAAMC,aAAa,GAAGf,WAAW,CAAC,YAAY;AAC1C,QAAI;AACA,YAAMgB,KAAK,GAAG,MAAMV,GAAG,CAACS,aAAJ,EAApB;AACAJ,MAAAA,aAAa,CAACK,KAAD,CAAb;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAPgC,EAO9B,CAACX,GAAD,CAP8B,CAAjC;AASAL,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIK,GAAG,CAACc,kBAAJ,EAAJ,EAA8B;AAC1B;AACZ;AACA;AACA;AACA;AACYd,MAAAA,GAAG,CAACe,sBAAJ,GAA6BC,IAA7B,CAAmCC,GAAD,IAASZ,aAAa,CAACY,GAAD,CAAxD;AACH,KAPD,MAOO;AACHR,MAAAA,aAAa;AAChB;AACJ,GAZQ,EAYN,CAACA,aAAD,EAAgBT,GAAhB,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAEM,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI;AAAA,kBAAOY,IAAI,CAACC,SAAL,CAAef,UAAf;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GApDQL,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { Authing } from '@authing/browser';\r\n\r\nfunction App() {\r\n    const sdk = useMemo(() => {\r\n        return new Authing({\r\n            domain: 'https://yutousi.authing.cn',\r\n            appId: '63858a0caa6255ed2a69abe7',\r\n            redirectUri: 'http://localhost:3000/admin.html',\r\n        });\r\n    }, []);\r\n\r\n    const [loginState, setLoginState] = useState();\r\n\r\n    // 以跳转方式打开 Authing 托管的登录页\r\n\r\n    const login = () => {\r\n        window.onload('http://localhost:3000/admin.html');\r\n    };\r\n\r\n    // 获取用户的登录状态\r\n\r\n    const getLoginState = useCallback(async () => {\r\n        try {\r\n            const state = await sdk.getLoginState();\r\n            setLoginState(state);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }, [sdk]);\r\n\r\n    useEffect(() => {\r\n        // 判断当前 URL 是否为 Authing 登录回调 URL\r\n        if (sdk.isRedirectCallback()) {\r\n            /**\r\n             * 以跳转方式打开 Authing 托管的登录页，认证成功后需要配合 \r\n             * handleRedirectCallback 方法，在回调端点处理 Authing 发送的\r\n             * 授权码或 token，获取用户登录态\r\n             */\r\n            sdk.handleRedirectCallback().then((res) => setLoginState(res));\r\n        } else {\r\n            getLoginState();\r\n        }\r\n    }, [getLoginState, sdk]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <p>\r\n                <button onClick={login}>loginWithRedirect</button>\r\n            </p>\r\n            <p>\r\n                <code>{JSON.stringify(loginState)}</code>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}