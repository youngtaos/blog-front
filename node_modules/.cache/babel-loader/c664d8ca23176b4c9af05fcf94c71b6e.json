{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\\\u6700\\u8FD1\\u9879\\u76EE\\\\blog\\\\src\\\\front\\\\container\\\\Home\\\\component\\\\Countdown\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from './style.module.scss';\nimport { useState, useEffect } from 'react';\nimport moment from 'moment/moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\nconst [NowYear, NowMouth, NowDay] = nowTime.split(' ')[0].split('-');\nconst [NowHours, NowMounties, NowSeconds] = nowTime.split(' ')[1].split(':');\n\nconst diffDay = (lastDate, earlyDate) => {\n  return (Date.parse(lastDate) - Date.parse(earlyDate)) / 1000 / 60 / 60 / 24;\n};\n\nconst CountDown = props => {\n  _s();\n\n  const [over, setOver] = useState(false);\n  const {\n    graduationYear\n  } = props;\n  const GraduationTime = {\n    year: parseInt(graduationYear),\n    mouth: 7,\n    day: 1,\n    hours: parseInt(NowHours),\n    minutes: parseInt(NowMounties),\n    seconds: parseInt(NowSeconds)\n  };\n  let NowTime = {\n    year: parseInt(NowYear),\n    mouth: parseInt(NowMouth),\n    day: parseInt(NowDay)\n  };\n  const RemainingDay = diffDay(`${GraduationTime.year}/${GraduationTime.mouth}/${GraduationTime.day}`, `${NowTime.year}/${NowTime.mouth}/${NowTime.day}`) - 1;\n  const obj = {\n    days: parseInt(RemainingDay),\n    hours: 24 - GraduationTime.hours,\n    minutes: 59 - GraduationTime.minutes,\n    seconds: 59 - GraduationTime.seconds\n  };\n  const [time, setTime] = useState(obj);\n\n  const tick = () => {\n    if (over) return;\n\n    if (time.days === 0 && time.hours === 0 && time.minutes === 0 && time.seconds === 0) {\n      setOver(true);\n    } else if (time.hours === 0 && time.minutes === 0 && time.seconds === 0) {\n      setTime({\n        days: time.days - 1,\n        hours: 23,\n        minutes: 59,\n        seconds: 59\n      });\n    } else if (time.minutes === 0 && time.seconds === 0) setTime({\n      days: time.days,\n      hours: time.hours - 1,\n      minutes: 59,\n      seconds: 59\n    });else if (time.seconds === 0) setTime({\n      days: time.days,\n      hours: time.hours,\n      minutes: time.minutes - 1,\n      seconds: 59\n    });else setTime({\n      days: time.days,\n      hours: time.hours,\n      minutes: time.minutes,\n      seconds: time.seconds - 1\n    });\n  };\n\n  useEffect(() => {\n    // 执行定时\n    let timerID = setInterval(() => tick(), 1000); // 卸载组件时进行清理\n\n    return () => clearInterval(timerID);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.countdownWrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.timeTittle,\n      children: \"\\u5927\\u5B66\\u5269\\u4F59\\u65F6\\u95F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.CountDowntime,\n      children: `${time.days.toString()}天\n                ${time.hours.toString().padStart(2, \"0\")}时\n                ${time.minutes.toString().padStart(2, \"0\")}分\n                ${time.seconds.toString().padStart(2, \"0\")}秒`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountDown, \"jMsJVDrIOgRYscNaukHMvXQFLu4=\");\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["D:/桌面/最近项目/blog/src/front/container/Home/component/Countdown/index.jsx"],"names":["styles","useState","useEffect","moment","nowTime","format","NowYear","NowMouth","NowDay","split","NowHours","NowMounties","NowSeconds","diffDay","lastDate","earlyDate","Date","parse","CountDown","props","over","setOver","graduationYear","GraduationTime","year","parseInt","mouth","day","hours","minutes","seconds","NowTime","RemainingDay","obj","days","time","setTime","tick","timerID","setInterval","clearInterval","countdownWrapper","timeTittle","CountDowntime","toString","padStart"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,GAAGE,MAAT,CAAgB,qBAAhB,CAAhB;AACA,MAAM,CAACC,OAAD,EAAUC,QAAV,EAAoBC,MAApB,IAA8BJ,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,CAApC;AACA,MAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,UAAxB,IAAsCR,OAAO,CAACK,KAAR,CAAc,GAAd,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,CAA5C;;AAGA,MAAMI,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrC,SAAO,CAACC,IAAI,CAACC,KAAL,CAAWH,QAAX,IAAuBE,IAAI,CAACC,KAAL,CAAWF,SAAX,CAAxB,IAAiD,IAAjD,GAAwD,EAAxD,GAA6D,EAA7D,GAAkE,EAAzE;AACH,CAFD;;AAMA,MAAMG,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM;AAAEqB,IAAAA;AAAF,MAAqBH,KAA3B;AACA,QAAMI,cAAc,GAAG;AACnBC,IAAAA,IAAI,EAAEC,QAAQ,CAACH,cAAD,CADK;AAEnBI,IAAAA,KAAK,EAAE,CAFY;AAGnBC,IAAAA,GAAG,EAAE,CAHc;AAInBC,IAAAA,KAAK,EAAEH,QAAQ,CAACf,QAAD,CAJI;AAKnBmB,IAAAA,OAAO,EAAEJ,QAAQ,CAACd,WAAD,CALE;AAMnBmB,IAAAA,OAAO,EAAEL,QAAQ,CAACb,UAAD;AANE,GAAvB;AASA,MAAImB,OAAO,GAAG;AACVP,IAAAA,IAAI,EAAEC,QAAQ,CAACnB,OAAD,CADJ;AAEVoB,IAAAA,KAAK,EAAED,QAAQ,CAAClB,QAAD,CAFL;AAGVoB,IAAAA,GAAG,EAAEF,QAAQ,CAACjB,MAAD;AAHH,GAAd;AAKA,QAAMwB,YAAY,GAAGnB,OAAO,CAAE,GAAEU,cAAc,CAACC,IAAK,IAAGD,cAAc,CAACG,KAAM,IAAGH,cAAc,CAACI,GAAI,EAAtE,EAA0E,GAAEI,OAAO,CAACP,IAAK,IAAGO,OAAO,CAACL,KAAM,IAAGK,OAAO,CAACJ,GAAI,EAAzH,CAAP,GAAqI,CAA1J;AACA,QAAMM,GAAG,GAAG;AAAEC,IAAAA,IAAI,EAAET,QAAQ,CAACO,YAAD,CAAhB;AAAgCJ,IAAAA,KAAK,EAAE,KAAKL,cAAc,CAACK,KAA3D;AAAkEC,IAAAA,OAAO,EAAE,KAAKN,cAAc,CAACM,OAA/F;AAAwGC,IAAAA,OAAO,EAAE,KAAKP,cAAc,CAACO;AAArI,GAAZ;AAGA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBnC,QAAQ,CAACgC,GAAD,CAAhC;;AAEA,QAAMI,IAAI,GAAG,MAAM;AACf,QAAIjB,IAAJ,EAAU;;AACV,QAAIe,IAAI,CAACD,IAAL,KAAc,CAAd,IAAmBC,IAAI,CAACP,KAAL,KAAe,CAAlC,IAAuCO,IAAI,CAACN,OAAL,KAAiB,CAAxD,IAA6DM,IAAI,CAACL,OAAL,KAAiB,CAAlF,EAAqF;AACjFT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD,MAGK,IAAIc,IAAI,CAACP,KAAL,KAAe,CAAf,IAAoBO,IAAI,CAACN,OAAL,KAAiB,CAArC,IAA0CM,IAAI,CAACL,OAAL,KAAiB,CAA/D,EAAkE;AACnEM,MAAAA,OAAO,CAAC;AACJF,QAAAA,IAAI,EAAEC,IAAI,CAACD,IAAL,GAAY,CADd;AAEJN,QAAAA,KAAK,EAAE,EAFH;AAGJC,QAAAA,OAAO,EAAE,EAHL;AAIJC,QAAAA,OAAO,EAAE;AAJL,OAAD,CAAP;AAMH,KAPI,MAQA,IAAIK,IAAI,CAACN,OAAL,KAAiB,CAAjB,IAAsBM,IAAI,CAACL,OAAL,KAAiB,CAA3C,EACDM,OAAO,CAAC;AACJF,MAAAA,IAAI,EAAEC,IAAI,CAACD,IADP;AAEJN,MAAAA,KAAK,EAAEO,IAAI,CAACP,KAAL,GAAa,CAFhB;AAGJC,MAAAA,OAAO,EAAE,EAHL;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAAD,CAAP,CADC,KAOA,IAAIK,IAAI,CAACL,OAAL,KAAiB,CAArB,EACDM,OAAO,CAAC;AACJF,MAAAA,IAAI,EAAEC,IAAI,CAACD,IADP;AAEJN,MAAAA,KAAK,EAAEO,IAAI,CAACP,KAFR;AAGJC,MAAAA,OAAO,EAAEM,IAAI,CAACN,OAAL,GAAe,CAHpB;AAIJC,MAAAA,OAAO,EAAE;AAJL,KAAD,CAAP,CADC,KAQDM,OAAO,CAAC;AACJF,MAAAA,IAAI,EAAEC,IAAI,CAACD,IADP;AAEJN,MAAAA,KAAK,EAAEO,IAAI,CAACP,KAFR;AAGJC,MAAAA,OAAO,EAAEM,IAAI,CAACN,OAHV;AAIJC,MAAAA,OAAO,EAAEK,IAAI,CAACL,OAAL,GAAe;AAJpB,KAAD,CAAP;AAMP,GAlCD;;AAqCA5B,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIoC,OAAO,GAAGC,WAAW,CAAC,MAAMF,IAAI,EAAX,EAAe,IAAf,CAAzB,CAFY,CAGZ;;AACA,WAAO,MAAMG,aAAa,CAACF,OAAD,CAA1B;AACH,GALQ,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAEtC,MAAM,CAACyC,gBAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEzC,MAAM,CAAC0C,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAE1C,MAAM,CAAC2C,aAAvB;AAAA,gBAAwC,GAAER,IAAI,CAACD,IAAL,CAAUU,QAAV,EAAqB;AAC3E,kBAAkBT,IAAI,CAACP,KAAL,CAAWgB,QAAX,GAAsBC,QAAtB,CAA+B,CAA/B,EAAkC,GAAlC,CAAuC;AACzD,kBAAkBV,IAAI,CAACN,OAAL,CAAae,QAAb,GAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAyC;AAC3D,kBAAkBV,IAAI,CAACL,OAAL,CAAac,QAAb,GAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAyC;AAH/C;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3ED;;GAAM3B,S;;KAAAA,S;AA6EN,eAAeA,SAAf","sourcesContent":["import styles from './style.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport moment from 'moment/moment';\r\n\r\nconst nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\r\nconst [NowYear, NowMouth, NowDay] = nowTime.split(' ')[0].split('-');\r\nconst [NowHours, NowMounties, NowSeconds] = nowTime.split(' ')[1].split(':');\r\n\r\n\r\nconst diffDay = (lastDate, earlyDate) => {\r\n    return (Date.parse(lastDate) - Date.parse(earlyDate)) / 1000 / 60 / 60 / 24;\r\n}\r\n\r\n\r\n\r\nconst CountDown = (props) => {\r\n    const [over, setOver] = useState(false);\r\n    const { graduationYear } = props;\r\n    const GraduationTime = {\r\n        year: parseInt(graduationYear),\r\n        mouth: 7,\r\n        day: 1,\r\n        hours: parseInt(NowHours),\r\n        minutes: parseInt(NowMounties),\r\n        seconds: parseInt(NowSeconds)\r\n    }\r\n\r\n    let NowTime = {\r\n        year: parseInt(NowYear),\r\n        mouth: parseInt(NowMouth),\r\n        day: parseInt(NowDay)\r\n    }\r\n    const RemainingDay = diffDay(`${GraduationTime.year}/${GraduationTime.mouth}/${GraduationTime.day}`, `${NowTime.year}/${NowTime.mouth}/${NowTime.day}`) - 1;\r\n    const obj = { days: parseInt(RemainingDay), hours: 24 - GraduationTime.hours, minutes: 59 - GraduationTime.minutes, seconds: 59 - GraduationTime.seconds }\r\n\r\n\r\n    const [time, setTime] = useState(obj);\r\n\r\n    const tick = () => {\r\n        if (over) return;\r\n        if (time.days === 0 && time.hours === 0 && time.minutes === 0 && time.seconds === 0) {\r\n            setOver(true);\r\n        }\r\n        else if (time.hours === 0 && time.minutes === 0 && time.seconds === 0) {\r\n            setTime({\r\n                days: time.days - 1,\r\n                hours: 23,\r\n                minutes: 59,\r\n                seconds: 59\r\n            });\r\n        }\r\n        else if (time.minutes === 0 && time.seconds === 0)\r\n            setTime({\r\n                days: time.days,\r\n                hours: time.hours - 1,\r\n                minutes: 59,\r\n                seconds: 59\r\n            });\r\n        else if (time.seconds === 0)\r\n            setTime({\r\n                days: time.days,\r\n                hours: time.hours,\r\n                minutes: time.minutes - 1,\r\n                seconds: 59\r\n            });\r\n        else\r\n            setTime({\r\n                days: time.days,\r\n                hours: time.hours,\r\n                minutes: time.minutes,\r\n                seconds: time.seconds - 1\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        // 执行定时\r\n        let timerID = setInterval(() => tick(), 1000);\r\n        // 卸载组件时进行清理\r\n        return () => clearInterval(timerID);\r\n    });\r\n    return (\r\n        <div className={styles.countdownWrapper}>\r\n            <div className={styles.timeTittle}>大学剩余时间</div>\r\n            <div className={styles.CountDowntime}>{`${time.days.toString()}天\r\n                ${time.hours.toString().padStart(2, \"0\")}时\r\n                ${time.minutes.toString().padStart(2, \"0\")}分\r\n                ${time.seconds.toString().padStart(2, \"0\")}秒`}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountDown;"]},"metadata":{},"sourceType":"module"}