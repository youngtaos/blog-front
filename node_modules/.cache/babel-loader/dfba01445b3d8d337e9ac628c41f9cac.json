{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u684C\\u9762\\\\blog\\\\src\\\\admin\\\\container\\\\HomeManagement\\\\component\\\\AreaList\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useImperativeHandle, forwardRef, createRef, useMemo } from 'react';\nimport { Button } from 'antd';\nimport { ReactSortable } from \"react-sortablejs\";\nimport AreaItem from '../AreaItem';\nimport styles from './style.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet refs = [];\n\nconst AreaList = (props, ref) => {\n  _s();\n\n  const [children, setChildren] = useState(props.children);\n  useEffect(() => {\n    setChildren(props.children);\n  }, [props.children]);\n  useMemo(() => {\n    refs = children.map(item => /*#__PURE__*/createRef());\n  }, [children]);\n\n  const addItemToChildren = () => {\n    const newChildren = [...children];\n    newChildren.push({});\n    setChildren(newChildren);\n  };\n\n  const changeAreaItem = (index, item) => {\n    const newChildren = [...children];\n    newChildren.splice(index, 1, item);\n    setChildren(newChildren);\n  };\n\n  const removeItemFromChildren = index => {\n    const newChildren = [...children];\n    newChildren.splice(index, 1);\n    setChildren(newChildren);\n  };\n\n  useImperativeHandle(ref, () => {\n    return {\n      getSchema: () => {\n        const schema = [];\n        children.forEach((item, index) => {\n          schema.push(refs[index].current.getSchema());\n        });\n        return schema;\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.list,\n      children: /*#__PURE__*/_jsxDEV(ReactSortable, {\n        list: children,\n        setList: setChildren,\n        children: children.map((item, index) => /*#__PURE__*/_jsxDEV(AreaItem, {\n          index: index,\n          item: item,\n          removeItemFromChildren: removeItemFromChildren,\n          changeAreaItem: changeAreaItem,\n          ref: refs[index]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      ghost: true,\n      onClick: addItemToChildren,\n      children: \"\\u65B0\\u589E\\u9875\\u9762\\u533A\\u5757\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AreaList, \"3Dphkvopes7IDdCjV4TTMChebAA=\", false, function () {\n  return [useImperativeHandle];\n});\n\n_c = AreaList;\nexport default _c2 = /*#__PURE__*/forwardRef(AreaList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AreaList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/桌面/blog/src/admin/container/HomeManagement/component/AreaList/index.jsx"],"names":["useState","useEffect","useImperativeHandle","forwardRef","createRef","useMemo","Button","ReactSortable","AreaItem","styles","refs","AreaList","props","ref","children","setChildren","map","item","addItemToChildren","newChildren","push","changeAreaItem","index","splice","removeItemFromChildren","getSchema","schema","forEach","current","list"],"mappings":"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","sourcesContent":["import { useState, useEffect, useImperativeHandle, forwardRef, createRef, useMemo } from 'react';\nimport { Button } from 'antd';\nimport { ReactSortable } from \"react-sortablejs\";\nimport AreaItem from '../AreaItem';\nimport styles from './style.module.scss';\n\nlet refs = [];\n\nconst AreaList = (props, ref) => {\n  const [ children, setChildren ] = useState(props.children);\n\n  useEffect(() => {\n    setChildren(props.children);\n  }, [props.children])\n  \n  useMemo(() => {\n    refs = children.map(item => createRef());\n  }, [children]);\n\n  const addItemToChildren = () => {\n    const newChildren = [...children];\n    newChildren.push({});\n    setChildren(newChildren);\n  }\n\n  const changeAreaItem = (index, item) => {\n    const newChildren = [...children];\n    newChildren.splice(index, 1, item)\n    setChildren(newChildren);\n  }\n\n  const removeItemFromChildren = (index) => {\n    const newChildren = [...children];\n    newChildren.splice(index, 1)\n    setChildren(newChildren);\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      getSchema: () => {\n        const schema = [];\n        children.forEach((item, index) => {\n          schema.push(refs[index].current.getSchema());\n        });\n        return schema;\n      },\n    }\n  })\n\n  return (\n    <div>\n      <ul className={styles.list}>\n        <ReactSortable list={children} setList={setChildren}>\n          {\n            children.map((item, index) => (\n              <AreaItem\n                key={index}\n                index={index}\n                item={item}\n                removeItemFromChildren={removeItemFromChildren}\n                changeAreaItem={changeAreaItem}\n                ref={refs[index]}\n              />\n            ))\n          }\n        </ReactSortable>\n      </ul>\n      <Button type=\"primary\" ghost onClick={addItemToChildren}>新增页面区块</Button>\n    </div>\n  );\n}\n\nexport default forwardRef(AreaList);"]},"metadata":{},"sourceType":"module"}