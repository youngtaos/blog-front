{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { OrgManagementClient } from './OrgManagementClient';\nimport { GraphqlClient } from '../common/GraphqlClient';\nimport { ManagementTokenProvider } from './ManagementTokenProvider';\nimport { UserPoolManagementClient } from './UserpoolManagementClient';\nimport { UsersManagementClient } from './UsersManagementClient';\nimport { sendEmail } from '../graphqlapi';\nimport { FastHttpClient, HttpClient } from '../common/HttpClient';\nimport Axios from 'axios';\nimport { RolesManagementClient } from './RolesManagementClient';\nimport { PoliciesManagementClient } from './PoliciesManagementClient';\nimport { UdfManagementClient } from './UdfManagementClient';\nimport { GroupsManagementClient } from './GroupsManagementClient';\nimport { AclManagementClient } from './AclManagementClient';\nimport { WhitelistManagementClient } from './WhitelistManagementClient';\nimport { StatisticsManagementClient } from './StatisticsManagementClient';\nimport jwtDecode from 'jwt-decode';\nimport { encrypt } from '../utils';\nimport { PublicKeyManager } from '../common/PublicKeyManager';\nimport { UserActionManagementClient } from './UserActionManagementClient';\nimport { ApplicationsManagementClient } from './ApplicationsManagementClient';\nimport { MFAManagementClient } from './MFAManagementClient';\nimport { PrincipalManagementClient } from './PrincipalManagement';\nimport { TenantManagementClient } from './TenantManagementClient';\nvar DEFAULT_OPTIONS = {\n  timeout: 10000,\n  onError: function (code, message) {\n    throw {\n      code: code,\n      message: message\n    };\n  },\n  host: 'https://core.authing.cn',\n  requestFrom: 'sdk',\n  encryptFunction: encrypt,\n  headers: {\n    'userpool-id': 'x-authing-userpool-id',\n    'app-id': 'x-authing-app-id',\n    'tenant-id': 'x-authing-app-tenant-id',\n    'request-from': 'x-authing-request-from',\n    'sdk-version': 'x-authing-sdk-version',\n    lang: 'x-authing-lang'\n  },\n  lang: 'zh-CN'\n};\n\nvar ManagementClient = function () {\n  function ManagementClient(options) {\n    Object.keys(options).forEach(function (i) {\n      return !options[i] && delete options[i];\n    });\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n    if (!this.options.userPoolId && !this.options.appId) throw new Error('请提供 userPoolId 或者 appId!');\n    var graphqlApiEndpointV2 = this.options.host + \"/graphql/v2\";\n\n    if (!this.options.secret && !this.options.accessToken) {\n      this.options.onError(1000, 'Init Management Client failed, must provide at least secret or accessToken !');\n    }\n\n    Axios.defaults.baseURL = this.options.host;\n    this.graphqlClient = new (this.options.graphqlClient || GraphqlClient)(graphqlApiEndpointV2, this.options);\n    this.tokenProvider = new ManagementTokenProvider(this.options, this.graphqlClient);\n    this.httpClient = new (this.options.httpClient || HttpClient)(this.options, this.tokenProvider);\n    this.fastHttpClient = new (this.options.fastHttpClient || FastHttpClient)(this.options, this.tokenProvider);\n    this.publicKeyManager = new PublicKeyManager(this.options, this.httpClient);\n    this.users = new UsersManagementClient(this.options, this.graphqlClient, this.httpClient, this.fastHttpClient, this.tokenProvider, this.publicKeyManager);\n    this.userpool = new UserPoolManagementClient(this.options, this.httpClient, this.graphqlClient, this.tokenProvider);\n    this.org = new OrgManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n    this.roles = new RolesManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n    this.policies = new PoliciesManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n    this.udf = new UdfManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n    this.acl = new AclManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n    this.whitelist = new WhitelistManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n    this.groups = new GroupsManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n    this.statistics = new StatisticsManagementClient(this.options, this.httpClient, this.tokenProvider);\n    this.userAction = new UserActionManagementClient(this.options, this.httpClient, this.tokenProvider);\n    this.applications = new ApplicationsManagementClient(this.options, this.httpClient, this.graphqlClient, this.tokenProvider);\n    this.mfa = new MFAManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n    this.principal = new PrincipalManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n    this.tenant = new TenantManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n  }\n  /**\n   * @description 发送邮件\n   * @param email: 邮件\n   * @param scene: 发送场景\n   *\n   */\n\n\n  ManagementClient.prototype.sendEmail = function (email, scene) {\n    return __awaiter(this, void 0, void 0, function () {\n      var data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , sendEmail(this.graphqlClient, this.tokenProvider, {\n              email: email,\n              scene: scene\n            })];\n\n          case 1:\n            data = _a.sent().sendEmail;\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * @description 检测登录状态\n   *\n   */\n\n\n  ManagementClient.prototype.checkLoginStatus = function (token, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, fetchUserDetail, decoded, data, id, user;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            options = options || {};\n            _a = options.fetchUserDetail, fetchUserDetail = _a === void 0 ? false : _a;\n            if (!token) return [2\n            /*return*/\n            , null];\n            decoded = null;\n\n            try {\n              decoded = jwtDecode(token);\n            } catch (error) {\n              return [2\n              /*return*/\n              , null];\n            }\n\n            data = decoded.data;\n            if (!!fetchUserDetail) return [3\n            /*break*/\n            , 1];\n            return [2\n            /*return*/\n            , data];\n\n          case 1:\n            id = data.id;\n            return [4\n            /*yield*/\n            , this.users.detail(id)];\n\n          case 2:\n            user = _b.sent();\n            return [2\n            /*return*/\n            , user];\n        }\n      });\n    });\n  };\n  /**\n   * @name isPasswordValid\n   * @name_zh 检测密码是否合法\n   * @description 检测密码是否合法\n   *\n   * @param {string} password 密码\n   *\n   * @example\n   *\n   * const envList = await managementClient.isPasswordValid('xxxxxx')\n   *\n   * @returns {Promise<{\n   *  valid: boolean\n   *  message: string\n   * }>} 返回检测结果\n   * @memberof ManagementClient\n   */\n\n\n  ManagementClient.prototype.isPasswordValid = function (password) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request({\n              method: 'POST',\n              url: this.options.host + \"/api/v2/password/check\",\n              data: {\n                password: password\n              }\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * @description 设置语言\n   */\n\n\n  ManagementClient.prototype.setLang = function (lang) {\n    this.options.lang = lang;\n  };\n  /**\n   * @description 执行 GraphQL 请求\n   */\n\n\n  ManagementClient.prototype.makeGraphqlRequest = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var query, variables, token, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            query = options.query, variables = options.variables;\n            return [4\n            /*yield*/\n            , this.tokenProvider.getToken()];\n\n          case 1:\n            token = _a.sent();\n            return [4\n            /*yield*/\n            , this.graphqlClient.request({\n              query: query,\n              variables: variables,\n              token: token\n            })];\n\n          case 2:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data];\n        }\n      });\n    });\n  };\n  /**\n   * @description 执行 RESTful 请求\n   */\n\n\n  ManagementClient.prototype.makeRestRequest = function (config) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.httpClient.request(config)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  return ManagementClient;\n}();\n\nexport { ManagementClient };","map":{"version":3,"sources":["../../../../src/lib/management/ManagementClient.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { OrgManagementClient } from './OrgManagementClient';\nimport { GraphqlClient } from '../common/GraphqlClient';\nimport { ManagementTokenProvider } from './ManagementTokenProvider';\nimport { UserPoolManagementClient } from './UserpoolManagementClient';\nimport { UsersManagementClient } from './UsersManagementClient';\nimport { sendEmail } from '../graphqlapi';\nimport { FastHttpClient, HttpClient } from '../common/HttpClient';\nimport Axios from 'axios';\nimport { RolesManagementClient } from './RolesManagementClient';\nimport { PoliciesManagementClient } from './PoliciesManagementClient';\nimport { UdfManagementClient } from './UdfManagementClient';\nimport { GroupsManagementClient } from './GroupsManagementClient';\nimport { AclManagementClient } from './AclManagementClient';\nimport { WhitelistManagementClient } from './WhitelistManagementClient';\nimport { StatisticsManagementClient } from './StatisticsManagementClient';\nimport jwtDecode from 'jwt-decode';\nimport { encrypt } from '../utils';\nimport { PublicKeyManager } from '../common/PublicKeyManager';\nimport { UserActionManagementClient } from './UserActionManagementClient';\nimport { ApplicationsManagementClient } from './ApplicationsManagementClient';\nimport { MFAManagementClient } from './MFAManagementClient';\nimport { PrincipalManagementClient } from './PrincipalManagement';\nimport { TenantManagementClient } from './TenantManagementClient';\nvar DEFAULT_OPTIONS = {\n    timeout: 10000,\n    onError: function (code, message) {\n        throw { code: code, message: message };\n    },\n    host: 'https://core.authing.cn',\n    requestFrom: 'sdk',\n    encryptFunction: encrypt,\n    headers: {\n        'userpool-id': 'x-authing-userpool-id',\n        'app-id': 'x-authing-app-id',\n        'tenant-id': 'x-authing-app-tenant-id',\n        'request-from': 'x-authing-request-from',\n        'sdk-version': 'x-authing-sdk-version',\n        lang: 'x-authing-lang'\n    },\n    lang: 'zh-CN'\n};\nvar ManagementClient = /** @class */ (function () {\n    function ManagementClient(options) {\n        Object.keys(options).forEach(function (i) { return !options[i] && delete options[i]; });\n        this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n        if (!this.options.userPoolId && !this.options.appId)\n            throw new Error('请提供 userPoolId 或者 appId!');\n        var graphqlApiEndpointV2 = this.options.host + \"/graphql/v2\";\n        if (!this.options.secret && !this.options.accessToken) {\n            this.options.onError(1000, 'Init Management Client failed, must provide at least secret or accessToken !');\n        }\n        Axios.defaults.baseURL = this.options.host;\n        this.graphqlClient = new (this.options.graphqlClient || GraphqlClient)(graphqlApiEndpointV2, this.options);\n        this.tokenProvider = new ManagementTokenProvider(this.options, this.graphqlClient);\n        this.httpClient = new (this.options.httpClient || HttpClient)(this.options, this.tokenProvider);\n        this.fastHttpClient = new (this.options.fastHttpClient || FastHttpClient)(this.options, this.tokenProvider);\n        this.publicKeyManager = new PublicKeyManager(this.options, this.httpClient);\n        this.users = new UsersManagementClient(this.options, this.graphqlClient, this.httpClient, this.fastHttpClient, this.tokenProvider, this.publicKeyManager);\n        this.userpool = new UserPoolManagementClient(this.options, this.httpClient, this.graphqlClient, this.tokenProvider);\n        this.org = new OrgManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n        this.roles = new RolesManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n        this.policies = new PoliciesManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n        this.udf = new UdfManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n        this.acl = new AclManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n        this.whitelist = new WhitelistManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n        this.groups = new GroupsManagementClient(this.options, this.graphqlClient, this.tokenProvider);\n        this.statistics = new StatisticsManagementClient(this.options, this.httpClient, this.tokenProvider);\n        this.userAction = new UserActionManagementClient(this.options, this.httpClient, this.tokenProvider);\n        this.applications = new ApplicationsManagementClient(this.options, this.httpClient, this.graphqlClient, this.tokenProvider);\n        this.mfa = new MFAManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n        this.principal = new PrincipalManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n        this.tenant = new TenantManagementClient(this.options, this.graphqlClient, this.httpClient, this.tokenProvider);\n    }\n    /**\n     * @description 发送邮件\n     * @param email: 邮件\n     * @param scene: 发送场景\n     *\n     */\n    ManagementClient.prototype.sendEmail = function (email, scene) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, sendEmail(this.graphqlClient, this.tokenProvider, { email: email, scene: scene })];\n                    case 1:\n                        data = (_a.sent()).sendEmail;\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * @description 检测登录状态\n     *\n     */\n    ManagementClient.prototype.checkLoginStatus = function (token, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, fetchUserDetail, decoded, data, id, user;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        options = options || {};\n                        _a = options.fetchUserDetail, fetchUserDetail = _a === void 0 ? false : _a;\n                        if (!token)\n                            return [2 /*return*/, null];\n                        decoded = null;\n                        try {\n                            decoded = jwtDecode(token);\n                        }\n                        catch (error) {\n                            return [2 /*return*/, null];\n                        }\n                        data = decoded.data;\n                        if (!!fetchUserDetail) return [3 /*break*/, 1];\n                        return [2 /*return*/, data];\n                    case 1:\n                        id = data.id;\n                        return [4 /*yield*/, this.users.detail(id)];\n                    case 2:\n                        user = _b.sent();\n                        return [2 /*return*/, user];\n                }\n            });\n        });\n    };\n    /**\n     * @name isPasswordValid\n     * @name_zh 检测密码是否合法\n     * @description 检测密码是否合法\n     *\n     * @param {string} password 密码\n     *\n     * @example\n     *\n     * const envList = await managementClient.isPasswordValid('xxxxxx')\n     *\n     * @returns {Promise<{\n     *  valid: boolean\n     *  message: string\n     * }>} 返回检测结果\n     * @memberof ManagementClient\n     */\n    ManagementClient.prototype.isPasswordValid = function (password) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request({\n                            method: 'POST',\n                            url: this.options.host + \"/api/v2/password/check\",\n                            data: {\n                                password: password\n                            }\n                        })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * @description 设置语言\n     */\n    ManagementClient.prototype.setLang = function (lang) {\n        this.options.lang = lang;\n    };\n    /**\n     * @description 执行 GraphQL 请求\n     */\n    ManagementClient.prototype.makeGraphqlRequest = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var query, variables, token, data;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        query = options.query, variables = options.variables;\n                        return [4 /*yield*/, this.tokenProvider.getToken()];\n                    case 1:\n                        token = _a.sent();\n                        return [4 /*yield*/, this.graphqlClient.request({\n                                query: query,\n                                variables: variables,\n                                token: token\n                            })];\n                    case 2:\n                        data = _a.sent();\n                        return [2 /*return*/, data];\n                }\n            });\n        });\n    };\n    /**\n     * @description 执行 RESTful 请求\n     */\n    ManagementClient.prototype.makeRestRequest = function (config) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.httpClient.request(config)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return ManagementClient;\n}());\nexport { ManagementClient };\n//# sourceMappingURL=ManagementClient.js.map"]},"metadata":{},"sourceType":"module"}